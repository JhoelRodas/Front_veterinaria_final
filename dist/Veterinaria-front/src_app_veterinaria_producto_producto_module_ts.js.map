{"version":3,"file":"src_app_veterinaria_producto_producto_module_ts.js","mappings":"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","sources":["./src/app/veterinaria/producto/crear-actualizar-producto/crear-actualizar-producto.component.ts","./src/app/veterinaria/producto/crear-actualizar-producto/crear-actualizar-producto.component.html","./src/app/veterinaria/producto/crear-actualizar-producto/crear-actualizar-producto.module.ts","./src/app/veterinaria/producto/producto-routing.module.ts","./src/app/veterinaria/producto/producto.component.ts","./src/app/veterinaria/producto/producto.component.html","./src/app/veterinaria/producto/producto.module.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {UntypedFormControl, UntypedFormGroup} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ApiClientService} from \"../../../service/api-client.service\";\n\n@Component({\n  selector: 'fury-crear-actualizar-producto',\n  templateUrl: './crear-actualizar-producto.component.html',\n  styleUrls: ['./crear-actualizar-producto.component.scss']\n})\nexport class CrearActualizarProductoComponent implements OnInit{\n  form : UntypedFormGroup;\n  mode : 'create' | 'update' = 'create';\n  categoriaList: any[] = []\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\n              private dialogRef: MatDialogRef<CrearActualizarProductoComponent>,\n              private apiClient : ApiClientService) {\n  }\n\n  ngOnInit(): void {\n    if (this.defaults){\n      this.mode = 'update';\n    }else{\n      this.defaults ={} as any;\n    }\n    this.form = new UntypedFormGroup({\n      nombre: new UntypedFormControl(this.defaults.nombre),\n      precioUnitario: new UntypedFormControl(this.defaults.precioUnitario),\n      stock: new UntypedFormControl(this.defaults.stock),\n      descripcion: new UntypedFormControl(this.defaults.descripcion),\n      idCategoria: new UntypedFormControl(this.defaults.idCategoria)\n    })\n\n    this.apiClient.getRequest('/api/categoria')\n      .subscribe({\n        next: (producto: any[]) => {\n          this.categoriaList = producto\n          console.info(producto)\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n  }\n\n  save() {\n    // this.createCustomer();\n    console.log(this.form.value)\n    // return;\n    if (this.mode === 'create') {\n      this.createCustomer();\n    } else if (this.mode === 'update') {\n      this.updateCustomer();\n    }\n  }\n  createCustomer() {\n    const customer = this.form.value;\n    this.dialogRef.close(customer);\n  }\n\n  updateCustomer() {\n    const customer = this.form.value;\n    customer.id = this.defaults.id;\n\n    this.dialogRef.close(customer);\n  }\n\n  isCreateMode() {\n    return this.mode === 'create';\n  }\n\n  isUpdateMode() {\n    return this.mode === 'update';\n  }\n\n\n\n}\n","<div mat-dialog-title>{{ isCreateMode() ? 'Crear' : 'Actualizar' }} Producto</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n  <mat-dialog-content>\n    <div fxLayout=\"column wrap\">\n      <mat-form-field fxFlex>\n        <mat-label>Nombre</mat-label>\n        <input type=\"text\" formControlName=\"nombre\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Precio Unitario</mat-label>\n        <input type=\"text\" formControlName=\"precioUnitario\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Stock</mat-label>\n        <input type=\"text\" formControlName=\"stock\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Descripcion</mat-label>\n        <input type=\"text\" formControlName=\"descripcion\" matInput>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Categoria</mat-label>\n        <mat-select formControlName=\"idCategoria\">\n          <mat-option *ngFor=\"let option of categoriaList\"\n                      [value]=\"option.id\">\n            {{option.nombre}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button *ngIf=\"isCreateMode()\"\n            mat-flat-button\n            color=\"primary\"\n            [disabled]=\"!form.valid\">Crear Producto\n    </button>\n    <button *ngIf=\"isUpdateMode()\"\n            mat-flat-button\n            color=\"primary\"\n            [disabled]=\"!form.valid\">Actualizar Producto\n    </button>\n  </mat-dialog-actions>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CrearActualizarProductoComponent } from './crear-actualizar-producto.component';\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatOptionModule} from \"@angular/material/core\";\n\n\n\n@NgModule({\n  declarations: [\n    CrearActualizarProductoComponent\n  ],\n  exports :[CrearActualizarProductoComponent],\n  imports: [\n    CommonModule,\n    FlexModule,\n    FormsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatOptionModule,\n    MatSelectModule\n\n  ]\n})\nexport class CrearActualizarProductoModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductoComponent } from './producto.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ProductoComponent\n},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductoRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {ListColumn} from \"../../../@fury/shared/list/list-column.model\";\nimport {CrearActualizarMascotaComponent} from \"../mascota/crear-actualizar-mascota/crear-actualizar-mascota.component\";\nimport {ApiClientService} from \"../../service/api-client.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {CrearActualizarProductoComponent} from \"./crear-actualizar-producto/crear-actualizar-producto.component\";\n\n@Component({\n  selector: 'fury-producto',\n  templateUrl: './producto.component.html',\n  styleUrls: ['./producto.component.scss']\n})\nexport class ProductoComponent implements OnInit{\n\n  dataSource : MatTableDataSource<any> = new MatTableDataSource([]);\n\n  columns : ListColumn[] = [\n    { name: 'ID', property: 'id', visible: true, isModelProperty: true },\n    { name: 'Nombre', property: 'nombre', visible: true, isModelProperty: true },\n    { name: 'Precio Unitario', property: 'precioUnitario', visible: true , isModelProperty: true },\n    { name: 'Stock', property: 'stock', visible: true, isModelProperty: true  },\n    { name: 'Descripcion', property: 'descripcion', visible: true, isModelProperty: true  },\n    { name: 'Categoria', property: 'nombreCategoria', visible: true, isModelProperty: true  },\n    { name: 'Actions', property: 'actions', visible: true },\n\n  ] as ListColumn[];\n\n  pageSize = 10;\n\n  ngOnInit(): void {\n    this.getProducto();\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  constructor(private apiClient:ApiClientService,\n              private dialog: MatDialog) {\n  }\n\n  getProducto() {\n    this.apiClient.getRequest('/api/producto')\n      .subscribe({\n        next: (producto: any[]) => {\n          this.dataSource.data = producto\n          console.log(producto);\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n  }\n\n  onFilterChange(value) {\n    console.info(event)\n\n    if (!this.dataSource) {\n      return;\n    }\n\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  createProducto() {\n    console.info('Abre dialogo');\n    this.dialog.open(CrearActualizarProductoComponent, {width: '400px'}).afterClosed().subscribe((data: any) => {\n      if (data) {\n        console.info('Al crear el dialogo de crear', data);\n        this.apiClient.postRequest('/api/producto', data)\n          .subscribe({\n            next: (body: any) => {\n              console.info('OK', body);\n              this.getProducto();\n            },\n            error: (error) => {\n              console.error('error', error)\n            }\n          })\n        console.info('Fin api call');\n      } else {\n        console.info('Cancelado')\n      }\n    });\n    console.info('Fin Metodo');\n  }\n\n  deleteProducto(row) {\n    // console.info('deleteMascota', row)\n    this.apiClient.deleteRequest(row.id, '/api/producto')\n      .subscribe({\n        next: (body: any) => {\n          this.getProducto();\n        },\n        error: (error) => {\n          // console.error(error)\n        }\n      })\n  }\n\n  updateProducto(row) {\n    console.info(row)\n    this.dialog.open(CrearActualizarProductoComponent, {\n      data: row,\n      width: '400px'\n    }).afterClosed().subscribe((data: any) => {\n      if (data) {\n        this.apiClient.putRequest('/api/producto',data.id, data)\n          .subscribe({\n            next: (body: any) => {\n              this.getProducto();\n            },\n            error: (error) => {\n              console.error(error)\n            }\n          })\n      } else {\n        console.info('Cancelado')\n      }\n    });\n  }\n\n}\n","<fury-page-layout mode=\"card\">\n  <fury-page-layout-header>\n    <fury-breadcrumbs [crumbs]=\"['Productos']\" current=\"Producto\"></fury-breadcrumbs>\n  </fury-page-layout-header>\n\n  <fury-page-layout-content>\n    <fury-list name=\"Productos\" [columns]=\"[]\" (filterChange)=\"onFilterChange($event)\">\n      <div class=\"actions\">\n        <button class=\"create\" (click)=\"createProducto()\" type=\"button\" mat-mini-fab color=\"primary\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n\n      <table [dataSource]=\"dataSource\" mat-table matSort>\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"checkbox\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <!-- fullName Column -->\n        <ng-container *ngFor=\"let column of columns\">\n          <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n            <td *matCellDef=\"let row\" mat-cell>\n              {{ row[column.property] }}\n            </td>\n          </ng-container>\n        </ng-container>\n\n\n        <!--          actions Column-->\n        <ng-container matColumnDef=\"actions\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\">\n              <mat-icon>more_horiz</mat-icon>\n            </button>\n\n            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n              <button (click)=\"updateProducto(row)\" mat-menu-item>\n                <span>Modify</span>\n              </button>\n              <button (click)=\"deleteProducto(row)\" mat-menu-item>\n                <span>Delete</span>\n              </button>\n            </mat-menu>\n          </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n        <tr (click)=\"updateProducto(row)\"\n            *matRowDef=\"let row; columns: visibleColumns;\"\n            class=\"clickable route-animations-elements\"\n            mat-row></tr>\n      </table>\n\n      <mat-paginator class=\"paginator\" [pageSize]=\"pageSize\"></mat-paginator>\n\n    </fury-list>\n\n  </fury-page-layout-content>\n</fury-page-layout>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductoRoutingModule } from './producto-routing.module';\nimport { ProductoComponent } from './producto.component';\nimport {BreadcrumbsModule} from \"../../../@fury/shared/breadcrumbs/breadcrumbs.module\";\nimport {ListModule} from \"../../../@fury/shared/list/list.module\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {PageLayoutModule} from \"../../../@fury/shared/page-layout/page-layout.module\";\nimport {CrearActualizarProductoModule} from \"./crear-actualizar-producto/crear-actualizar-producto.module\";\n\n\n@NgModule({\n  declarations: [\n    ProductoComponent\n  ],\n  imports: [\n    CommonModule,\n    ProductoRoutingModule,\n    BreadcrumbsModule,\n    ListModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    PageLayoutModule,\n    CrearActualizarProductoModule\n  ]\n})\nexport class ProductoModule { }\n"],"names":["UntypedFormControl","UntypedFormGroup","MAT_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r3","id","ɵɵadvance","ɵɵtextInterpolate1","nombre","ctx_r1","form","valid","ctx_r2","CrearActualizarProductoComponent","constructor","defaults","dialogRef","apiClient","mode","categoriaList","ngOnInit","precioUnitario","stock","descripcion","idCategoria","getRequest","subscribe","next","producto","console","info","error","save","log","value","createCustomer","updateCustomer","customer","close","isCreateMode","isUpdateMode","ɵɵdirectiveInject","i1","MatDialogRef","i2","ApiClientService","selectors","decls","vars","consts","template","CrearActualizarProductoComponent_Template","rf","ctx","ɵɵlistener","CrearActualizarProductoComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵtemplate","CrearActualizarProductoComponent_mat_option_25_Template","CrearActualizarProductoComponent_button_27_Template","CrearActualizarProductoComponent_button_28_Template","CommonModule","FlexModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatOptionModule","CrearActualizarProductoModule","declarations","imports","exports","RouterModule","ProductoComponent","routes","path","component","ProductoRoutingModule","forChild","MatTableDataSource","ProductoComponent_th_11_Template_mat_checkbox_click_1_listener","$event","stopPropagation","ProductoComponent_td_12_Template_mat_checkbox_click_1_listener","column_r10","name","row_r15","property","ɵɵelementContainerStart","ProductoComponent_ng_container_13_ng_container_1_th_1_Template","ProductoComponent_ng_container_13_ng_container_1_td_2_Template","ɵɵelementContainerEnd","ProductoComponent_ng_container_13_ng_container_1_Template","isModelProperty","ProductoComponent_td_16_Template_button_click_1_listener","ProductoComponent_td_16_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r22","row_r18","$implicit","ctx_r21","ɵɵnextContext","ɵɵresetView","updateProducto","ProductoComponent_td_16_Template_button_click_9_listener","ctx_r23","deleteProducto","_r19","ProductoComponent_tr_18_Template_tr_click_0_listener","_r26","row_r24","ctx_r25","getProducto","visibleColumns","columns","filter","column","visible","map","dialog","dataSource","pageSize","data","onFilterChange","event","trim","toLowerCase","createProducto","open","width","afterClosed","postRequest","body","row","deleteRequest","putRequest","MatDialog","ProductoComponent_Template","ProductoComponent_Template_fury_list_filterChange_4_listener","ProductoComponent_Template_button_click_6_listener","ProductoComponent_th_11_Template","ProductoComponent_td_12_Template","ProductoComponent_ng_container_13_Template","ProductoComponent_th_15_Template","ProductoComponent_td_16_Template","ProductoComponent_tr_17_Template","ProductoComponent_tr_18_Template","ɵɵpureFunction0","_c0","_c1","BreadcrumbsModule","ListModule","MatCheckboxModule","MatIconModule","MatMenuModule","MatPaginatorModule","MatSortModule","MatTableModule","PageLayoutModule","ProductoModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}