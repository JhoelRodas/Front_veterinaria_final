{"version":3,"file":"src_app_veterinaria_mascota_mascota_module_ts.js","mappings":"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","sources":["./src/app/veterinaria/mascota/crear-actualizar-mascota/crear-actualizar-mascota.component.ts","./src/app/veterinaria/mascota/crear-actualizar-mascota/crear-actualizar-mascota.component.html","./src/app/veterinaria/mascota/crear-actualizar-mascota/crear-actualizar-mascota.module.ts","./src/app/veterinaria/mascota/mascota-routing.module.ts","./src/app/veterinaria/mascota/mascota.component.ts","./src/app/veterinaria/mascota/mascota.component.html","./src/app/veterinaria/mascota/mascota.module.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {UntypedFormControl, UntypedFormGroup} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {CrearActualizarMascotaModule} from \"./crear-actualizar-mascota.module\";\n\n@Component({\n  selector: 'fury-crear-actualizar-mascota',\n  templateUrl: './crear-actualizar-mascota.component.html',\n  styleUrls: ['./crear-actualizar-mascota.component.scss']\n})\nexport class CrearActualizarMascotaComponent implements OnInit{\n\n  form : UntypedFormGroup;\n  mode: 'create' | 'update' = 'create';\n  //Revisar para entender despues...\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\n              private dialogRef: MatDialogRef<CrearActualizarMascotaComponent>) {\n  }\n\n  ngOnInit():void {\n    if (this.defaults) {\n      this.mode = 'update';\n    } else {\n      this.defaults = {} as any;\n    }\n    this.form = new UntypedFormGroup({\n      nombre: new UntypedFormControl(this.defaults.nombre),\n      edad: new UntypedFormControl(this.defaults.edad),\n      sexo: new UntypedFormControl(this.defaults.sexo),\n      color: new UntypedFormControl(this.defaults.color),\n      especie: new UntypedFormControl(this.defaults.especie),\n      raza: new UntypedFormControl(this.defaults.raza),\n      ci: new UntypedFormControl(this.defaults.ci)\n    })\n  }\n\n  save() {\n    // this.createCustomer();\n    console.log(this.form.value)\n    // return;\n    if (this.mode === 'create') {\n      this.createCustomer();\n    } else if (this.mode === 'update') {\n      this.updateCustomer();\n    }\n  }\n  createCustomer() {\n    const customer = this.form.value;\n    this.dialogRef.close(customer);\n  }\n\n  updateCustomer() {\n    const customer = this.form.value;\n    customer.id = this.defaults.id;\n\n    this.dialogRef.close(customer);\n  }\n\n  isCreateMode() {\n    return this.mode === 'create';\n  }\n\n  isUpdateMode() {\n    return this.mode === 'update';\n  }\n\n\n}\n","<!--<div style=\"width: 400px; padding: 10px\" [formGroup]=\"form\">-->\n<!--  <h1>{{title}}</h1>-->\n<!--  <div style=\"width: 100%\">-->\n<!--    <input formControlName=\"ci\" placeholder=\"Nro. Documento\">-->\n<!--  </div>-->\n<!--  <div style=\"width: 100%\">-->\n<!--    <input formControlName=\"extension\" placeholder=\"Extension\">-->\n<!--  </div>-->\n<!--  <div style=\"width: 100%\">-->\n<!--    <input formControlName=\"nombre\" placeholder=\"Nombre\">-->\n<!--  </div>-->\n<!--  <div style=\"width: 100%\">-->\n<!--    <input formControlName=\"telefono\" placeholder=\"Telefono\">-->\n<!--  </div>-->\n<!--  <div style=\"width: 100%\">-->\n<!--    <input formControlName=\"correo\" placeholder=\"Correo\">-->\n<!--  </div>-->\n<!--  <div style=\"width: 100%\">-->\n<!--    <input formControlName=\"direccion\" placeholder=\"Direccion\">-->\n<!--  </div>-->\n<!--  <div style=\"width: 100%\">-->\n<!--    <button (click)=\"save()\">Guardar</button>-->\n<!--  </div>-->\n<!--</div>-->\n<div mat-dialog-title>{{ isCreateMode() ? 'Crear' : 'Actualizar' }} Mascota</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n  <mat-dialog-content>\n    <div fxLayout=\"column wrap\">\n<!--      <mat-form-field formGroupName = \"ciCliente\">-->\n<!--        <mat-label>Cliente</mat-label>-->\n<!--        <mat-select formControlName=\"id\">-->\n<!--          <mat-option *ngFor=\"let option of clienteList\"-->\n<!--                      [value]=\"option.id\">-->\n<!--            {{option.nombre}}-->\n<!--          </mat-option>-->\n<!--        </mat-select>-->\n<!--      </mat-form-field>-->\n\n      <mat-form-field *ngIf=\"mode != 'update'\" fxFlex>\n        <mat-label>CI Cliente</mat-label>\n        <input type=\"text\" formControlName=\"ci\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Nombre</mat-label>\n        <input type=\"text\" formControlName=\"nombre\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Edad</mat-label>\n        <input type=\"text\" formControlName=\"edad\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Sexo</mat-label>\n        <input type=\"text\" formControlName=\"sexo\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Color</mat-label>\n        <input type=\"text\" formControlName=\"color\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Especie</mat-label>\n        <input type=\"text\" formControlName=\"especie\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Raza</mat-label>\n        <input type=\"text\" formControlName=\"raza\" matInput>\n      </mat-form-field>\n\n\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button *ngIf=\"isCreateMode()\"\n            mat-flat-button\n            color=\"primary\"\n            [disabled]=\"!form.valid\">Crear Mascota\n    </button>\n    <button *ngIf=\"isUpdateMode()\"\n            mat-flat-button\n            color=\"primary\"\n            [disabled]=\"!form.valid\">Actualizar Mascota\n    </button>\n  </mat-dialog-actions>\n</form>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CrearActualizarMascotaComponent } from './crear-actualizar-mascota.component';\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {\n  CrearActualizarClienteComponent\n} from \"../../cliente/crear-actualizar-cliente/crear-actualizar-cliente.component\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n\n\n@NgModule({\n  declarations: [\n    CrearActualizarMascotaComponent,\n  ],\n  exports: [CrearActualizarMascotaComponent],\n    imports: [\n        CommonModule,\n        FlexModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        ReactiveFormsModule,\n        MatOptionModule,\n        MatSelectModule\n    ]\n})\nexport class CrearActualizarMascotaModule { }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ClienteComponent} from \"../cliente/cliente.component\";\nimport {MascotaComponent} from \"./mascota.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: MascotaComponent\n},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MascotaRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {ListColumn} from \"../../../@fury/shared/list/list-column.model\";\nimport {ApiClientService} from \"../../service/api-client.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {CrearActualizarClienteComponent} from \"../cliente/crear-actualizar-cliente/crear-actualizar-cliente.component\";\nimport {CrearActualizarMascotaComponent} from \"./crear-actualizar-mascota/crear-actualizar-mascota.component\";\n\n@Component({\n  selector: 'fury-mascota',\n  templateUrl: './mascota.component.html',\n  styleUrls: ['./mascota.component.scss']\n})\n\nexport class MascotaComponent implements OnInit{\n  dataSource : MatTableDataSource<any> = new MatTableDataSource([]);\n\n  columns: ListColumn[]=[\n    { name: 'ID', property: 'id', visible: true, isModelProperty: true },\n    { name: 'Nombre', property: 'nombre', visible: true, isModelProperty: true },\n    { name: 'Edad', property: 'edad', visible: true, isModelProperty: true },\n    { name: 'Sexo', property: 'sexo', visible: true , isModelProperty: true },\n    { name: 'Color', property: 'color', visible: true, isModelProperty: true  },\n    { name: 'Especie', property: 'especie', visible: true, isModelProperty: true  },\n    { name: 'Raza', property: 'raza', visible: true, isModelProperty: true  },\n    { name: 'CI Cliente', property: 'ci', visible: true, isModelProperty: true  },\n    { name: 'Actions', property: 'actions', visible: true },\n  ] as ListColumn[];\n\n  pageSize = 10;\n\n  ngOnInit(): void {\n    this.getMascotas();\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n\n  constructor(private apiClient:ApiClientService,\n              private dialog: MatDialog) {\n  }\n\n  getMascotas() {\n    this.apiClient.getRequest('/api/mascota')\n      .subscribe({\n        next: (mascotas: any[]) => {\n          this.dataSource.data = mascotas\n          console.log(mascotas);\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n  }\n\n  onFilterChange(value) {\n    console.info(event)\n\n    if (!this.dataSource) {\n      return;\n    }\n\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  createMascota() {\n    console.info('Abre dialogo');\n    this.dialog.open(CrearActualizarMascotaComponent, {width: '400px'}).afterClosed().subscribe((data: any) => {\n      if (data) {\n        console.info('Al cerrar', data);\n        this.apiClient.postRequest('/api/mascota', data)\n          .subscribe({\n            next: (body: any) => {\n              console.info('OK', body);\n              this.getMascotas();\n            },\n            error: (error) => {\n              console.error('error', error)\n            }\n          })\n        console.info('Fin api call');\n      } else {\n        console.info('Cancelado')\n      }\n    });\n    console.info('Fin Metodo');\n  }\n\n  deleteMascota(row) {\n    // console.info('deleteMascota', row)\n    this.apiClient.deleteRequest(row.id, '/api/mascota')\n      .subscribe({\n        next: (body: any) => {\n          this.getMascotas();\n        },\n        error: (error) => {\n          // console.error(error)\n        }\n      })\n  }\n\n  updateMascota(row) {\n    console.info(row)\n    this.dialog.open(CrearActualizarMascotaComponent, {data: row, width: '400px'}).afterClosed().subscribe((data: any) => {\n      if (data) {\n        this.apiClient.putRequest('/api/mascota', data.id, data)\n          .subscribe({\n            next: (body: any) => {\n              this.getMascotas();\n            },\n            error: (error) => {\n              console.error(error)\n            }\n          })\n      } else {\n        console.info('Cancelado')\n      }\n    });\n  }\n\n\n}\n","<fury-page-layout mode=\"card\">\n  <fury-page-layout-header>\n    <fury-breadcrumbs [crumbs]=\"['Mascotas']\" current=\"mascotas\"></fury-breadcrumbs>\n  </fury-page-layout-header>\n\n  <fury-page-layout-content>\n    <fury-list name=\"Mascotas\" [columns]=\"[]\" (filterChange)=\"onFilterChange($event)\">\n      <div class=\"actions\">\n        <button class=\"create\" (click)=\"createMascota()\" type=\"button\" mat-mini-fab color=\"primary\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n\n      <table [dataSource]=\"dataSource\" mat-table matSort>\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"checkbox\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <!-- fullName Column -->\n        <ng-container *ngFor=\"let column of columns\">\n          <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n            <td *matCellDef=\"let row\" mat-cell>\n              {{ row[column.property] }}\n            </td>\n          </ng-container>\n        </ng-container>\n\n\n<!--          actions Column-->\n        <ng-container matColumnDef=\"actions\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\">\n              <mat-icon>more_horiz</mat-icon>\n            </button>\n\n            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n              <button (click)=\"updateMascota(row)\" mat-menu-item>\n                <span>Modify</span>\n              </button>\n              <button (click)=\"deleteMascota(row)\" mat-menu-item>\n                <span>Delete</span>\n              </button>\n            </mat-menu>\n          </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n        <tr (click)=\"updateMascota(row)\"\n            *matRowDef=\"let row; columns: visibleColumns;\"\n            class=\"clickable route-animations-elements\"\n            mat-row></tr>\n      </table>\n\n      <mat-paginator class=\"paginator\" [pageSize]=\"pageSize\"></mat-paginator>\n\n    </fury-list>\n\n  </fury-page-layout-content>\n</fury-page-layout>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MascotaRoutingModule } from './mascota-routing.module';\nimport { MascotaComponent } from './mascota.component';\nimport {BreadcrumbsModule} from \"../../../@fury/shared/breadcrumbs/breadcrumbs.module\";\nimport {ListModule} from \"../../../@fury/shared/list/list.module\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {PageLayoutModule} from \"../../../@fury/shared/page-layout/page-layout.module\";\nimport {CrearActualizarMascotaComponent} from \"./crear-actualizar-mascota/crear-actualizar-mascota.component\";\nimport {CrearActualizarMascotaModule} from \"./crear-actualizar-mascota/crear-actualizar-mascota.module\";\n\n\n@NgModule({\n  declarations: [\n    MascotaComponent\n  ],\n  imports: [\n    CommonModule,\n    MascotaRoutingModule,\n    BreadcrumbsModule,\n    ListModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    PageLayoutModule,\n    CrearActualizarMascotaModule\n  ]\n})\nexport class MascotaModule { }\n"],"names":["UntypedFormControl","UntypedFormGroup","MAT_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ctx_r1","form","valid","ctx_r2","CrearActualizarMascotaComponent","constructor","defaults","dialogRef","mode","ngOnInit","nombre","edad","sexo","color","especie","raza","ci","save","console","log","value","createCustomer","updateCustomer","customer","close","id","isCreateMode","isUpdateMode","ɵɵdirectiveInject","i1","MatDialogRef","selectors","decls","vars","consts","template","CrearActualizarMascotaComponent_Template","rf","ctx","ɵɵlistener","CrearActualizarMascotaComponent_Template_form_ngSubmit_2_listener","ɵɵtemplate","CrearActualizarMascotaComponent_mat_form_field_5_Template","CrearActualizarMascotaComponent_button_31_Template","CrearActualizarMascotaComponent_button_32_Template","ɵɵadvance","ɵɵtextInterpolate1","CommonModule","FlexModule","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","ReactiveFormsModule","MatOptionModule","MatSelectModule","CrearActualizarMascotaModule","declarations","imports","exports","RouterModule","MascotaComponent","routes","path","component","MascotaRoutingModule","forChild","MatTableDataSource","MascotaComponent_th_11_Template_mat_checkbox_click_1_listener","$event","stopPropagation","MascotaComponent_td_12_Template_mat_checkbox_click_1_listener","column_r10","name","row_r15","property","ɵɵelementContainerStart","MascotaComponent_ng_container_13_ng_container_1_th_1_Template","MascotaComponent_ng_container_13_ng_container_1_td_2_Template","ɵɵelementContainerEnd","MascotaComponent_ng_container_13_ng_container_1_Template","isModelProperty","MascotaComponent_td_16_Template_button_click_1_listener","MascotaComponent_td_16_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r22","row_r18","$implicit","ctx_r21","ɵɵnextContext","ɵɵresetView","updateMascota","MascotaComponent_td_16_Template_button_click_9_listener","ctx_r23","deleteMascota","_r19","MascotaComponent_tr_18_Template_tr_click_0_listener","_r26","row_r24","ctx_r25","getMascotas","visibleColumns","columns","filter","column","visible","map","apiClient","dialog","dataSource","pageSize","getRequest","subscribe","next","mascotas","data","error","onFilterChange","info","event","trim","toLowerCase","createMascota","open","width","afterClosed","postRequest","body","row","deleteRequest","putRequest","ApiClientService","i2","MatDialog","MascotaComponent_Template","MascotaComponent_Template_fury_list_filterChange_4_listener","MascotaComponent_Template_button_click_6_listener","MascotaComponent_th_11_Template","MascotaComponent_td_12_Template","MascotaComponent_ng_container_13_Template","MascotaComponent_th_15_Template","MascotaComponent_td_16_Template","MascotaComponent_tr_17_Template","MascotaComponent_tr_18_Template","ɵɵpureFunction0","_c0","_c1","BreadcrumbsModule","ListModule","MatCheckboxModule","MatIconModule","MatMenuModule","MatPaginatorModule","MatSortModule","MatTableModule","PageLayoutModule","MascotaModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}