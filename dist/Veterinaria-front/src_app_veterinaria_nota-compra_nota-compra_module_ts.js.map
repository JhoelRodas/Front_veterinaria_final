{"version":3,"file":"src_app_veterinaria_nota-compra_nota-compra_module_ts.js","mappings":"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","sources":["./src/app/veterinaria/nota-compra/crear-actualizar-nota-compra/crear-actualizar-nota-compra.component.ts","./src/app/veterinaria/nota-compra/crear-actualizar-nota-compra/crear-actualizar-nota-compra.component.html","./src/app/veterinaria/nota-compra/crear-reporte-compra/crear-reporte-compra.component.ts","./src/app/veterinaria/nota-compra/crear-reporte-compra/crear-reporte-compra.component.html","./src/app/veterinaria/nota-compra/crear-reporte-compra/crear-reporte-compra.module.ts","./src/app/veterinaria/nota-compra/nota-compra-detalles/nota-compra-detalles.component.ts","./src/app/veterinaria/nota-compra/nota-compra-detalles/nota-compra-detalles.component.html","./src/app/veterinaria/nota-compra/nota-compra-detalles/nota-compra-detalles.module.ts","./src/app/veterinaria/nota-compra/nota-compra-routing.module.ts","./src/app/veterinaria/nota-compra/nota-compra.component.ts","./src/app/veterinaria/nota-compra/nota-compra.component.html","./src/app/veterinaria/nota-compra/nota-compra.module.ts"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup, UntypedFormControl, UntypedFormGroup} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {ListColumn} from \"../../../../@fury/shared/list/list-column.model\";\nimport {ApiClientService} from \"../../../service/api-client.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'fury-crear-actualizar-nota-compra',\n  templateUrl: './crear-actualizar-nota-compra.component.html',\n  styleUrls: ['./crear-actualizar-nota-compra.component.scss']\n})\nexport class CrearActualizarNotaCompraComponent implements OnInit{\n\n  form: FormGroup;\n  productosList: any[] = []\n  proveedoresList: any[] = []\n  detalles: any[] = []; // Lista para almacenar los productos agregados temporalmente\n  dataSource: MatTableDataSource<any> = new MatTableDataSource([]);\n\n  @Input()\n  columns: ListColumn[] = [\n    { name: 'ID Producto', property: 'idProducto', visible: true, isModelProperty: true },\n    { name: 'Cantidad', property: 'cantidad', visible: true, isModelProperty: true },\n    { name: 'Monto', property: 'monto', visible: true, isModelProperty: true },\n    { name: 'Actions', property: 'actions', visible: true },\n  ] as ListColumn[];\n\n  pageSize = 10;\n\n  constructor(private apiClient:ApiClientService,\n              private router : Router) {\n\n    this.form = new UntypedFormGroup({\n      idProducto: new UntypedFormControl(\"\"),\n      nombreProveedor: new UntypedFormControl(\"\"),\n      cant: new UntypedFormControl(\"\"),\n      stock: new UntypedFormControl({ value: 0, disabled: true }), // Campo de solo lectura\n      precioUnitario: new UntypedFormControl({ value: 0, disabled: true }), // Campo de solo lectura\n      monto: new UntypedFormControl(\"\"), // Campo de solo lectura\n\n\n    });\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  ngOnInit(): void {\n    this.apiClient.getRequest('/api/producto')\n      .subscribe({\n        next: (producto: any[]) => {\n          this.productosList = producto\n          console.info(producto)\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n\n    this.apiClient.getRequest('/api/proveedor')\n      .subscribe({\n        next: (proveedor: any[]) => {\n          this.proveedoresList = proveedor\n          console.info(proveedor)\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n\n    // Escuchar cambios en el selector de productos\n    this.form.get('idProducto')?.valueChanges.subscribe(productId => {\n      this.actualizarCamposProducto(productId);\n    });\n\n    // Escuchar cambios en la cantidad para actualizar el monto automáticamente\n    // this.form.get('cant')?.valueChanges.subscribe(() => {\n    //   this.actualizarMonto();\n    // });\n  }\n\n\n  agregarDetalle(){\n//    Obtén los valores actuales del formulario sin incluir precioUnitario y stock\n    const { idProducto, cant , monto } = this.form.getRawValue();\n\n    // Encuentra el producto seleccionado en la lista\n    const productoSeleccionado = this.productosList.find(prod => prod.id === idProducto);\n    console.log(\"pro\",productoSeleccionado)\n\n    if (!productoSeleccionado) {\n      console.error(\"Producto no encontrado o no seleccionado\");\n      return;\n    }\n\n    productoSeleccionado.stock = productoSeleccionado.stock + Number(cant);\n    console.log(\"proSelec\",productoSeleccionado)\n    this.apiClient.putRequest('/api/producto',productoSeleccionado.id,productoSeleccionado)\n      .subscribe({\n        next:(response) =>{\n          console.log(response)\n        },\n        error: (error) => {\n          console.error('Error al actualizar  producto:', error);\n        }\n\n      });\n\n    const detalleExistente = this.detalles.find(detalle => detalle.idProducto === idProducto);\n\n    console.log(\"detalleExistente\",detalleExistente)\n\n    if (detalleExistente) {\n      // Si ya existe, actualiza la cantidad y el monto\n      detalleExistente.cantidad = Number(detalleExistente.cantidad) + Number(cant);\n      detalleExistente.monto = monto;\n      // detalleExistente.monto = Number(detalleExistente.cantidad) * Number(productoSeleccionado.precioUnitario);\n    } else {\n      // Construye el objeto detalle sin incluir precioUnitario y stock\n      //const monto = Number(cant) * productoSeleccionado.precioUnitario;\n      const nuevoDetalle = {\n        idProducto: idProducto,\n        cantidad: cant,\n        monto: monto\n      };\n      console.log(\"nuevo Detalle\",nuevoDetalle)\n      // Agrega el detalle a la lista y actualiza el dataSource\n      this.detalles.push(nuevoDetalle);\n    }\n      console.log(\"listDetalles\",this.detalles)\n      this.dataSource.data = [...this.detalles];\n\n      // Reinicia el formulario para la siguiente entrada\n      this.form.patchValue({ idProducto: null, cant: 0, precioUnitario: 0, stock: 0 });\n  }\n\n  guardarDetalles(){\n\n    // Obtén el valor de cliente desde el formulario\n    const nombreProveedor = this.form.get('nombreProveedor')?.value;\n\n    // Crear el objeto de envío que contiene los detalles y el cliente\n    //objeto para  enviar al api\n    const datosParaEnvio = {\n      nombreProveedor: nombreProveedor,\n      detalles: this.detalles,\n      montoTotal: 0.00,\n    };\n    console.log(\"DetallesCompra\",datosParaEnvio)\n    this.apiClient.postRequest('/api/notacompra',datosParaEnvio)\n      .subscribe({\n        next: (response) => {\n          console.info('Detalles guardados correctamente:', response);\n\n          // Redirige a la pantalla de Recibos\n          this.router.navigate(['compras/nota-Compra']);\n        },\n        error: (error) => {\n          console.error('Error al guardar los detalles:', error);\n        }\n      });\n  }\n\n  actualizarCamposProducto(productId: number) {\n    const productoSeleccionado = this.productosList.find(prod => prod.id === productId);\n    console.log(productoSeleccionado);\n\n    if (productoSeleccionado) {\n      // Actualiza el precio unitario y el stock en el formulario\n      this.form.patchValue({\n        precioUnitario: productoSeleccionado.precioUnitario,\n        stock: productoSeleccionado.stock\n      });\n    } else {\n      // Si no hay producto seleccionado, limpia los campos\n      this.form.patchValue({\n        precioUnitario: 0,\n        stock: 0\n      });\n    }\n  }\n\n  actualizarMonto() {\n    const cantidad = this.form.get('cant')?.value || 0;\n    const precioUnitario = this.form.get('precioUnitario')?.value || 0;\n    //const monto = cantidad * precioUnitario;\n    const monto = this.form.value;\n    const a = monto.precio\n\n    // Actualiza el monto en el formulario\n    this.form.patchValue({ monto });\n  }\n\n  updateDetalle(row){\n\n  }\n\n  deleteDetalle(row){\n    console.log(\"row\",row)\n    console.log(\"ListPro\",this.productosList)\n    const productoSeleccionado = this.productosList.find(prod => prod.id === row.idProducto);\n    this.detalles = this.detalles.filter(item => item.idProducto !== row.idProducto);\n    console.log(\"producto\",productoSeleccionado)\n    console.log(\"detallesList\",this.detalles)\n    productoSeleccionado.stock = Number(productoSeleccionado.stock) - Number(row.cantidad);\n    this.apiClient.putRequest('/api/producto',productoSeleccionado.id,productoSeleccionado)\n      .subscribe({\n        next:(response) =>{\n          console.log(response)\n          this.apiClient.getRequest('/api/producto')\n            .subscribe({\n              next: (producto: any[]) => {\n                this.productosList = producto\n                console.info(producto)\n              },\n              error: (error) => {\n                console.error(error)\n              }\n            })\n\n          this.dataSource.data = this.dataSource.data.filter((it) => {\n            return it.idProducto !== row.idProducto\n          })\n        },\n        error: (error) => {\n          console.error('Error al actualizar  producto:', error);\n        }\n\n      });\n    // console.log(row)\n  }\n\n  onFilterChange(value) {\n    console.info(event)\n\n    if (!this.dataSource) {\n      return;\n    }\n\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n\n\n}\n","<fury-page-layout mode=\"card\">\n  <fury-page-layout-header>\n    <fury-breadcrumbs [crumbs]=\"['Detalles-Compra']\" current=\"Detalles\"></fury-breadcrumbs>\n  </fury-page-layout-header>\n\n  <fury-page-layout-content>\n    <fury-list name=\"Detalle de Compra\" [columns]=\"[]\" (filterChange)=\"onFilterChange($event)\">\n      <div fxLayout=\"row wrap\" [formGroup]=\"form\">\n\n        <mat-form-field>\n          <mat-label>Proveedor</mat-label>\n          <mat-select formControlName=\"nombreProveedor\">\n            <mat-option *ngFor=\"let option of proveedoresList\"\n                        [value]=\"option.nombre\">\n              {{option.nombre}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Productos</mat-label>\n          <mat-select formControlName=\"idProducto\">\n            <mat-option *ngFor=\"let option of productosList\"\n                        [value]=\"option.id\">\n              {{option.nombre}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field fxFlex>\n          <mat-label>Stock</mat-label>\n          <input type=\"text\" matInput formControlName=\"stock\" readonly>\n        </mat-form-field>\n\n\n<!--        <mat-form-field fxFlex>-->\n<!--          <mat-label>Precio</mat-label>-->\n<!--          <input type=\"text\" matInput formControlName=\"precioUnitario\" readonly>-->\n<!--        </mat-form-field>-->\n\n        <mat-form-field fxFlex>\n          <mat-label>Cantidad</mat-label>\n          <input type=\"text\" formControlName=\"cant\" matInput>\n        </mat-form-field>\n\n        <mat-form-field fxFlex>\n          <mat-label>Monto</mat-label>\n          <input type=\"text\" formControlName=\"monto\" matInput>\n        </mat-form-field>\n\n\n        <div class=\"actions\">\n          <button class=\"create\" (click)=\"agregarDetalle()\" type=\"button\" mat-mini-fab color=\"primary\">\n            <mat-icon>add</mat-icon>\n          </button>\n        </div>\n      </div>\n      <table [dataSource]=\"dataSource\" mat-table matSort>\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"checkbox\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <!-- fullName Column -->\n        <ng-container *ngFor=\"let column of columns\">\n          <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n            <td *matCellDef=\"let row\" mat-cell>\n              {{ row[column.property] }}\n            </td>\n          </ng-container>\n        </ng-container>\n\n\n        <!--          actions Column-->\n        <ng-container matColumnDef=\"actions\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\">\n              <mat-icon>more_horiz</mat-icon>\n            </button>\n\n            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n<!--              <button (click)=\"updateDetalle(row)\" mat-menu-item>-->\n<!--                <span>Modify</span>-->\n<!--              </button>-->\n              <button (click)=\"deleteDetalle(row)\" mat-menu-item>\n                <span>Delete</span>\n              </button>\n            </mat-menu>\n          </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n        <tr (click)=\"updateDetalle(row)\"\n            *matRowDef=\"let row; columns: visibleColumns;\"\n            class=\"clickable route-animations-elements\"\n            mat-row></tr>\n      </table>\n\n      <mat-paginator class=\"paginator\" [pageSize]=\"pageSize\"></mat-paginator>\n\n    </fury-list>\n\n    <!-- Botón para guardar detalles y regresar a Recibos -->\n    <div style=\"margin-top: 20px; text-align: right;\">\n      <button mat-raised-button color=\"primary\" (click)=\"guardarDetalles()\">\n        Guardar y Volver a Recibos\n      </button>\n    </div>\n\n  </fury-page-layout-content>\n</fury-page-layout>\n\n\n\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ApiClientService} from \"../../../service/api-client.service\";\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport moment from \"moment/moment\";\nimport {ListColumn} from \"../../../../@fury/shared/list/list-column.model\";\nimport {formatDate} from \"@angular/common\";\n\n@Component({\n  selector: 'fury-crear-reporte-compra',\n  templateUrl: './crear-reporte-compra.component.html',\n  styleUrls: ['./crear-reporte-compra.component.scss']\n})\nexport class CrearReporteCompraComponent implements OnInit{\n\n  form: FormGroup;\n  columns: any[];\n  proveedoresList: any[];\n\n  constructor(private dialogRef: MatDialogRef<CrearReporteCompraComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { // Aquí se reciben los datos) {\n\n    this.columns = data.columns; // Obtenemos las columnas enviadas desde el componente principal\n    this.proveedoresList = data.proveedoresList; // Obtenemos la lista de proveedores\n\n    this.form = new FormGroup({\n      from: new FormControl(moment().subtract(10, \"days\").toDate()),\n      to: new FormControl(moment().toDate()),\n      montoMayor: new FormControl(null,[\n        Validators.min(0),\n        Validators.pattern(/^\\d+(\\.\\d{1,2})?$/), // Acepta decimales con hasta 2 dígitos\n      ]),\n      montoMenor: new FormControl(null,[\n        Validators.min(0),\n        Validators.pattern(/^\\d+(\\.\\d{1,2})?$/), // Acepta decimales con hasta 2 dígitos\n      ]),\n      nombreProveedor: new FormControl(null)\n    });\n\n  }\n\n\n\n\n  ngOnInit(): void {\n\n  }\n\n    formatDecimals(controlName: string): void {\n      const control = this.form.get(controlName);\n      if (control?.value != null && control.value !== '') {\n      control.setValue(parseFloat(control.value).toFixed(2)); // Siempre deja 2 decimales\n    }\n  }\n\n  generateReport() {\n    const selectedHeaders = this.columns\n      .filter((column) => column.selected)\n      .map(({ name, property }) => ({ name, property }));\n\n    if (selectedHeaders.length === 0) {\n      alert('Debe seleccionar al menos una cabecera para el reporte.');\n      return;\n    }\n\n    const filters = {\n      inicio: this.form.value.from ? formatDate(this.form.value.from, 'dd/MM/yyyy', 'en') : null,\n      fin: this.form.value.to ? formatDate(this.form.value.to, 'dd/MM/yyyy', 'en') : null,\n      montoMayor: this.form.value.montoMayor,\n      montoMenor: this.form.value.montoMenor,\n      nombreProveedor: this.form.value.nombreProveedor,\n    };\n\n    const reportData = {\n      filtros: filters,\n      headers: selectedHeaders,\n      tipoReporte: 'Compras',\n    };\n\n    this.dialogRef.close(reportData);\n  }\n\n  closeDialog() {\n    this.dialogRef.close(null);\n  }\n\n}\n","<h2 mat-dialog-title>Generar Reporte</h2>\n\n<mat-dialog-content>\n  <!-- Título de los Filtros -->\n  <h3>Filtros del Reporte</h3>\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"16px\" fxLayoutAlign=\"start start\" [formGroup]=\"form\">\n    <!-- Rango de Fechas -->\n    <mat-form-field fxFlex=\"100\" fxFlex.xs=\"100\">\n      <mat-label>Rango de fecha</mat-label>\n      <mat-date-range-input [rangePicker]=\"picker\">\n        <input matStartDate formControlName=\"from\" placeholder=\"Inicio\">\n        <input matEndDate formControlName=\"to\" placeholder=\"Fin\">\n      </mat-date-range-input>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-date-range-picker #picker></mat-date-range-picker>\n      <mat-error *ngIf=\"form.controls.from.hasError('matStartDateInvalid')\">Fecha de inicio inválida</mat-error>\n      <mat-error *ngIf=\"form.controls.to.hasError('matEndDateInvalid')\">Fecha de fin inválida</mat-error>\n    </mat-form-field>\n\n    <!-- Monto Mayor -->\n    <mat-form-field fxFlex=\"50\" fxFlex.xs=\"100\">\n      <mat-label>Monto Mayor</mat-label>\n      <input\n        matInput\n        type=\"number\"\n        formControlName=\"montoMayor\"\n        placeholder=\"Ingrese monto mayor\"\n        min=\"0\"\n        step=\"1\"\n        (input)=\"formatDecimals('montoMayor')\"\n        (blur)=\"formatDecimals('montoMayor')\"\n      />\n      <mat-error *ngIf=\"form.controls.montoMayor.hasError('min')\">\n        El monto debe ser mayor o igual a 0.\n      </mat-error>\n    </mat-form-field>\n\n    <!-- Monto Menor -->\n    <mat-form-field fxFlex=\"50\" fxFlex.xs=\"100\">\n      <mat-label>Monto Menor</mat-label>\n      <input\n        matInput\n        type=\"number\"\n        formControlName=\"montoMenor\"\n        placeholder=\"Ingrese monto menor\"\n        min=\"0\"\n        step=\"1\"\n        (input)=\"formatDecimals('montoMenor')\"\n        (blur)=\"formatDecimals('montoMenor')\"\n      />\n      <mat-error *ngIf=\"form.controls.montoMenor.hasError('min')\">\n        El monto debe ser mayor o igual a 0.\n      </mat-error>\n    </mat-form-field>\n\n    <!-- Proveedor -->\n    <mat-form-field fxFlex=\"100\" fxFlex.xs=\"100\">\n      <mat-label>Proveedor</mat-label>\n      <mat-select formControlName=\"nombreProveedor\">\n        <mat-option *ngFor=\"let option of proveedoresList\" [value]=\"option.nombre\">\n          {{ option.nombre }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <!-- Título de las Cabeceras -->\n  <h3>Cabeceras del Reporte</h3>\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"16px\" fxLayoutAlign=\"start start\" class=\"checkbox-container\">\n    <div fxFlex=\"25%\" *ngFor=\"let column of columns\" [hidden]=\"!column.visible || column.property === 'actions'\">\n      <mat-checkbox [(ngModel)]=\"column.selected\">\n        {{ column.name }}\n      </mat-checkbox>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button color=\"primary\" (click)=\"generateReport()\">Generar</button>\n  <button mat-raised-button mat-dialog-close>Cancelar</button>\n</mat-dialog-actions>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CrearReporteCompraComponent } from './crear-reporte-compra.component';\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\n\n\n\n@NgModule({\n  declarations: [\n    CrearReporteCompraComponent\n  ],\n  exports:[CrearReporteCompraComponent],\n  imports: [\n    CommonModule,\n    FlexModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    FormsModule,\n    MatCheckboxModule\n  ]\n})\nexport class CrearReporteCompraModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {UntypedFormControl, UntypedFormGroup} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ApiClientService} from \"../../../service/api-client.service\";\nimport { saveAs } from 'file-saver';\n\n\n@Component({\n  selector: 'fury-nota-compra-detalles',\n  templateUrl: './nota-compra-detalles.component.html',\n  styleUrls: ['./nota-compra-detalles.component.scss']\n})\nexport class NotaCompraDetallesComponent implements OnInit{\n  form : UntypedFormGroup;\n  detalles: any[] = []; // Lista para almacenar los productos agregados temporalmente\n\n  dataSource: MatTableDataSource<any> = new MatTableDataSource([]);\n  displayedColumns: string[] = ['nombreProducto', 'cantidad', 'monto'];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              private dialogRef: MatDialogRef<NotaCompraDetallesComponent>,\n              private apiClient : ApiClientService) {\n  }\n\n  ngOnInit(){\n    this.form = new UntypedFormGroup({\n      id: new UntypedFormControl(this.data.id),\n      nombreProveedor: new UntypedFormControl(this.data.nombreProveedor),\n      fecha: new UntypedFormControl(this.data.fecha),\n      montoTotal: new UntypedFormControl(this.data.montoTotal),\n    });\n    console.log(\"idNotaCompra\",this.data.id)\n    this.apiClient.getRequest('/api/notacompra/get',{ id: this.data.id })\n      .subscribe({\n        next: (body: any) => {\n          console.info(\"NotaCompraCompleto\",body)\n          this.dataSource.data = body.detalle\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n\n  }\n\n  descargarPDF() {\n    this.apiClient.getRequest('/api/notacompra/download-pdf', { id: this.data.id })\n      .subscribe({\n        next: (response: any) => {\n          if (response && response.pdf) {\n            // Decodifica el Base64\n            const pdfData = atob(response.pdf);\n            const byteArray = new Uint8Array(pdfData.length);\n            for (let i = 0; i < pdfData.length; i++) {\n              byteArray[i] = pdfData.charCodeAt(i);\n            }\n\n            // Crea el Blob y descarga el PDF\n            const blob = new Blob([byteArray], { type: 'application/pdf' });\n            saveAs(blob, `nota_compra_${this.data.id}.pdf`);\n          } else {\n            console.error(\"Error: el PDF no contiene datos.\");\n            alert(\"No se pudo generar el PDF. Inténtalo de nuevo más tarde.\");\n          }\n        },\n        error: (error) => {\n          console.error('Error al descargar el PDF', error);\n          alert(\"Ocurrió un error al intentar descargar el PDF.\");\n        }\n      });\n  }\n\n\n  closeDialog(): void {\n    this.dialogRef.close(); // Cierra el diálogo sin pasar ningún dato\n  }\n\n}\n","<div mat-dialog-title> Informacion Completa de la Nota de Compra </div>\n<form [formGroup]=\"form\">\n  <mat-dialog-content>\n    <div fxLayout=\"column wrap\">\n\n      <mat-form-field fxFlex>\n        <mat-label>id</mat-label>\n        <input matInput formControlName=\"id\" readonly>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>nombre del Proveedor</mat-label>\n        <input matInput formControlName=\"nombreProveedor\" readonly>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>fecha</mat-label>\n        <input matInput formControlName=\"fecha\" readonly>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>montoTotal</mat-label>\n        <input matInput formControlName=\"montoTotal\" readonly>\n      </mat-form-field>\n\n    </div>\n\n    <!-- Botón de cierre encima de la tabla -->\n    <div style=\"text-align: right; margin-top: 15px;\">\n      <button mat-raised-button color=\"primary\" (click)=\"closeDialog()\">Cerrar</button>\n    </div>\n\n    <div style=\"text-align: right; margin-top: 15px;\">\n      <button mat-raised-button color=\"primary\" (click)=\"descargarPDF()\">Descargar</button>\n    </div>\n\n    <!-- Tabla para los detalles -->\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" style=\"width: 100%; margin-top: 20px;\">\n\n      <ng-container matColumnDef=\"nombreProducto\">\n        <th mat-header-cell *matHeaderCellDef> Producto </th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.nombreProducto }} </td>\n      </ng-container>\n\n      <!-- Columna Cantidad -->\n      <ng-container matColumnDef=\"cantidad\">\n        <th mat-header-cell *matHeaderCellDef> Cantidad </th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.cantidad }} </td>\n      </ng-container>\n\n      <!-- Columna Monto -->\n      <ng-container matColumnDef=\"monto\">\n        <th mat-header-cell *matHeaderCellDef> Monto </th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.monto | currency }} </td>\n      </ng-container>\n\n      <!-- Header y filas -->\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </mat-dialog-content>\n</form>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotaCompraDetallesComponent } from './nota-compra-detalles.component';\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n\n\n@NgModule({\n  declarations: [\n    NotaCompraDetallesComponent\n  ],\n  exports : [NotaCompraDetallesComponent],\n  imports: [\n    CommonModule,\n    FlexModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    ReactiveFormsModule\n  ]\n})\nexport class NotaCompraDetallesModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotaCompraComponent } from './nota-compra.component';\nimport {\n  CrearActualizarNotaCompraComponent\n} from \"./crear-actualizar-nota-compra/crear-actualizar-nota-compra.component\";\n\nconst routes: Routes = [{ path: '', component: NotaCompraComponent },\n                        { path: 'detalles-compra', component: CrearActualizarNotaCompraComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NotaCompraRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {ListColumn} from \"../../../@fury/shared/list/list-column.model\";\nimport {ApiClientService} from \"../../service/api-client.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport moment from \"moment\";\nimport {fileUtil} from \"../../service/file.util\";\nimport {CrearActualizarDetallesComponent} from \"../venta/crear-actualizar-detalles/crear-actualizar-detalles.component\";\nimport {NotaCompraDetallesComponent} from \"./nota-compra-detalles/nota-compra-detalles.component\";\nimport {formatDate} from \"@angular/common\";\nimport {CrearReporteCompraComponent} from \"./crear-reporte-compra/crear-reporte-compra.component\";\n\n@Component({\n  selector: 'fury-nota-compra',\n  templateUrl: './nota-compra.component.html',\n  styleUrls: ['./nota-compra.component.scss']\n})\nexport class NotaCompraComponent implements OnInit{\n\n  form: FormGroup;\n  proveedoresList : any[]=[];\n  dataSource: MatTableDataSource<any> = new MatTableDataSource([]);\n  columns: ListColumn[] = [\n    {name: 'ID', property: 'id', visible: true, isModelProperty: true, selected: true},\n    {name: 'Fecha', property: 'fecha', visible: true, isModelProperty: true, selected: true},\n    {name: 'Monto Total', property: 'montoTotal', visible: true, isModelProperty: true, selected: true},\n    {name: 'Proveedor', property: 'nombreProveedor', visible: true, isModelProperty: true, selected: true},\n    {name: 'Actions', property: 'actions', visible: true},\n  ] as ListColumn[];\n\n  pageSize = 10;\n  userActions: any = {};\n  constructor(private apiClient: ApiClientService,\n              private dialog: MatDialog,\n              private router: Router) {\n\n    this.form = new FormGroup({\n      from: new FormControl(moment().subtract(10, \"days\").toDate()),\n      to: new FormControl(moment().toDate()),\n      montoMayor: new FormControl(null,[\n        Validators.min(0),\n        Validators.pattern(/^\\d+(\\.\\d{1,2})?$/), // Acepta decimales con hasta 2 dígitos\n      ]),\n      montoMenor: new FormControl(null,[\n        Validators.min(0),\n        Validators.pattern(/^\\d+(\\.\\d{1,2})?$/), // Acepta decimales con hasta 2 dígitos\n      ]),\n      nombreProveedor: new FormControl(null)\n    });\n  }\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  ngOnInit(): void {\n    this.apiClient.getRequest('/api/proveedor')\n      .subscribe({\n        next: (proveedor: any[]) => {\n          this.proveedoresList = [{ id: null, nombre: 'todos' }, ...proveedor];\n          console.info('proveedoresList',proveedor)\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n    this.getNotasDeCompra();\n    this.apiClient.getRequest(`/api/v1/resource/actions-by-user?frontendCode=PAGE_NOTACOMPRA`)\n      .subscribe({next: this.successActionList});\n\n  }\n\n  protected successActionList = (data: any) => {\n    this.userActions = data;\n  }\n\n\n\n  formatDecimals(controlName: string): void {\n    const control = this.form.get(controlName);\n    if (control?.value != null && control.value !== '') {\n      control.setValue(parseFloat(control.value).toFixed(2)); // Siempre deja 2 decimales\n    }\n  }\n\n  onFilterChange(value) {\n    console.info(event)\n\n    if (!this.dataSource) {\n      return;\n    }\n\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  getNotasDeCompra() {\n    this.apiClient.getRequest('/api/notacompra')\n      .subscribe({\n        next: (data: any[]) => {\n          this.dataSource.data = data\n          console.log(data)\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n  }\n\n  createNotaDeCompra() {\n    this.router.navigate(['compras/nota-Compra/detalles-compra']).then(() => {\n      // Asegúrate de que `getRecibos` se llama en la pantalla principal\n      this.getNotasDeCompra(); // O utiliza algún método de actualización adecuado\n    });\n  }\n\n  // generarReporte() {\n  //\n  //   // Extraer valores del formulario\n  //   const selectedHeaders = this.columns\n  //     .filter(column => column.selected) // Solo las columnas seleccionadas\n  //     .map(({ name, property }) => ({ name, property })); // Mapea solo los datos necesarios\n  //   const formValues = this.form.value; // Obtiene los valores del formulario\n  //\n  //   const filtroCompras = {\n  //     inicio : formValues.from ? formatDate(formValues.from, 'dd/MM/yyyy', 'en') : null,\n  //     fin : formValues.to ? formatDate(formValues.to, 'dd/MM/yyyy', 'en') : null,\n  //     montoMayor:formValues.montoMayor ? parseFloat(formValues.montoMayor) : null,\n  //     montoMenor:formValues.montoMenor ? parseFloat(formValues.montoMenor) : null,\n  //     nombreProveedor:formValues.nombreProveedor,\n  //   }\n  //   console.log('filtros = ',filtroCompras);\n  //   const bodyReporte = {\n  //     filtros: filtroCompras,\n  //     headers: selectedHeaders,\n  //     tipoReporte: \"Compras\",\n  //   }\n  //   console.log('reporteFiltros',bodyReporte)\n  //   this.apiClient.postRequest('/api/reporte/generar-excel', bodyReporte)\n  //     .subscribe({\n  //       next:(body:any) => {\n  //         console.log(body)\n  //         fileUtil.downloadFromBase64(body.base64Archivo, \"excel.xlsx\", body.tipoRespaldo);\n  //       }\n  //     })\n  // }\n\n  generarReporte() {\n    this.dialog.open(CrearReporteCompraComponent,{\n      width: '600px',\n      data: {\n        columns: this.columns, // Pasamos las columnas al diálogo\n        proveedoresList: this.proveedoresList, // También pasamos la lista de proveedores\n      },\n    }).afterClosed().subscribe((result) => {\n      if (result) {\n        console.log('Datos para el reporte:', result);\n        this.apiClient.postRequest('/api/reporte/generar-excel', result)\n          .subscribe({\n            next: (body: any) => {\n              console.log(body);\n              fileUtil.downloadFromBase64(body.base64Archivo, \"excel.xlsx\", body.tipoRespaldo);\n            },\n          });\n      }\n    });\n  }\n\n\n  anularNotaDeCompra(row) {\n    // console.info('deleteMascota', row)\n    this.apiClient.deleteRequest(row.id,'/api/notacompra')\n      .subscribe({\n        next: (body: any) => {\n          this.getNotasDeCompra();\n        },\n        error: (error) => {\n          // console.error(error)\n        }\n      })\n  }\n\n  verDeatlles(row) {\n    console.info(\"Nota de compra\",row)\n    this.dialog.open(NotaCompraDetallesComponent,{\n      data: row,\n      width: '400px'\n    })\n  }\n\n}\n","<fury-page-layout mode=\"card\">\n  <fury-page-layout-header>\n    <fury-breadcrumbs [crumbs]=\"['Nota de Compra']\" current=\"Nota de Compra\"></fury-breadcrumbs>\n  </fury-page-layout-header>\n\n  <fury-page-layout-content>\n    <fury-list name=\"Notas de Compra\" [columns]=\"[]\" (filterChange)=\"onFilterChange($event)\">\n      <div class=\"actions\" >\n        <div fxLayout=\"row\" fxLayoutGap=\"16px\">\n          <button class=\"create\" (click)=\"createNotaDeCompra()\" type=\"button\" mat-mini-fab color=\"primary\">\n            <mat-icon>add</mat-icon>\n          </button>\n\n          <button *ngIf=\"userActions.toExcelAction\" class =\"generarReporte\"  (click)=\"generarReporte()\" type=\"button\" mat-raised-button color=\"primary\">\n            Generar Reporte\n          </button>\n\n        </div>\n      </div>\n\n      <table [dataSource]=\"dataSource\" mat-table matSort>\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"checkbox\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <!-- fullName Column -->\n        <ng-container *ngFor=\"let column of columns\">\n          <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n            <td *matCellDef=\"let row\" mat-cell>\n              {{ row[column.property] }}\n            </td>\n          </ng-container>\n        </ng-container>\n\n\n        <!--          actions Column-->\n        <ng-container matColumnDef=\"actions\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\">\n              <mat-icon>more_horiz</mat-icon>\n            </button>\n\n            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n              <button  (click)=\"verDeatlles(row) \" mat-menu-item>\n                <span>ver detalles</span>\n              </button>\n              <button (click)=\"anularNotaDeCompra(row)\" mat-menu-item>\n                <span>Delete</span>\n              </button>\n            </mat-menu>\n          </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n        <tr (click)=\"verDeatlles(row)\"\n            *matRowDef=\"let row; columns: visibleColumns;\"\n            class=\"clickable route-animations-elements\"\n            mat-row></tr>\n      </table>\n\n      <mat-paginator class=\"paginator\" [pageSize]=\"pageSize\"></mat-paginator>\n\n    </fury-list>\n\n  </fury-page-layout-content>\n</fury-page-layout>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotaCompraRoutingModule } from './nota-compra-routing.module';\nimport { NotaCompraComponent } from './nota-compra.component';\nimport { CrearActualizarNotaCompraComponent } from './crear-actualizar-nota-compra/crear-actualizar-nota-compra.component';\nimport {BreadcrumbsModule} from \"../../../@fury/shared/breadcrumbs/breadcrumbs.module\";\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {ListModule} from \"../../../@fury/shared/list/list.module\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {PageLayoutModule} from \"../../../@fury/shared/page-layout/page-layout.module\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {NotaCompraDetallesModule} from \"./nota-compra-detalles/nota-compra-detalles.module\";\nimport {CrearReporteCompraModule} from \"./crear-reporte-compra/crear-reporte-compra.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\n\n\n@NgModule({\n  declarations: [\n    NotaCompraComponent,\n    CrearActualizarNotaCompraComponent\n  ],\n    imports: [\n        CommonModule,\n        NotaCompraRoutingModule,\n        BreadcrumbsModule,\n        FlexModule,\n        ListModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatTableModule,\n        PageLayoutModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatOptionModule,\n        MatSelectModule,\n        NotaCompraDetallesModule,\n        FormsModule,\n        CrearReporteCompraModule,\n        MatDialogModule,\n    ]\n})\nexport class NotaCompraModule { }\n"],"names":["UntypedFormControl","UntypedFormGroup","MatTableDataSource","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r9","nombre","ɵɵadvance","ɵɵtextInterpolate1","option_r10","id","ɵɵlistener","CrearActualizarNotaCompraComponent_th_34_Template_mat_checkbox_click_1_listener","$event","stopPropagation","CrearActualizarNotaCompraComponent_td_35_Template_mat_checkbox_click_1_listener","column_r14","name","row_r19","property","ɵɵelementContainerStart","ɵɵtemplate","CrearActualizarNotaCompraComponent_ng_container_36_ng_container_1_th_1_Template","CrearActualizarNotaCompraComponent_ng_container_36_ng_container_1_td_2_Template","ɵɵelementContainerEnd","CrearActualizarNotaCompraComponent_ng_container_36_ng_container_1_Template","isModelProperty","ɵɵelement","CrearActualizarNotaCompraComponent_td_39_Template_button_click_1_listener","CrearActualizarNotaCompraComponent_td_39_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r26","row_r22","$implicit","ctx_r25","ɵɵnextContext","ɵɵresetView","deleteDetalle","_r23","CrearActualizarNotaCompraComponent_tr_41_Template_tr_click_0_listener","_r29","row_r27","ctx_r28","updateDetalle","CrearActualizarNotaCompraComponent","constructor","apiClient","router","productosList","proveedoresList","detalles","dataSource","columns","visible","pageSize","form","idProducto","nombreProveedor","cant","stock","value","disabled","precioUnitario","monto","visibleColumns","filter","column","map","ngOnInit","getRequest","subscribe","next","producto","console","info","error","proveedor","get","valueChanges","productId","actualizarCamposProducto","agregarDetalle","getRawValue","productoSeleccionado","find","prod","log","Number","putRequest","response","detalleExistente","detalle","cantidad","nuevoDetalle","push","data","patchValue","guardarDetalles","datosParaEnvio","montoTotal","postRequest","navigate","actualizarMonto","a","precio","row","item","it","onFilterChange","event","trim","toLowerCase","ɵɵdirectiveInject","i1","ApiClientService","i2","Router","selectors","inputs","decls","vars","consts","template","CrearActualizarNotaCompraComponent_Template","rf","ctx","CrearActualizarNotaCompraComponent_Template_fury_list_filterChange_4_listener","CrearActualizarNotaCompraComponent_mat_option_10_Template","CrearActualizarNotaCompraComponent_mat_option_15_Template","CrearActualizarNotaCompraComponent_Template_button_click_29_listener","CrearActualizarNotaCompraComponent_th_34_Template","CrearActualizarNotaCompraComponent_td_35_Template","CrearActualizarNotaCompraComponent_ng_container_36_Template","CrearActualizarNotaCompraComponent_th_38_Template","CrearActualizarNotaCompraComponent_td_39_Template","CrearActualizarNotaCompraComponent_tr_40_Template","CrearActualizarNotaCompraComponent_tr_41_Template","CrearActualizarNotaCompraComponent_Template_button_click_44_listener","ɵɵpureFunction0","_c0","_c1","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","moment","formatDate","option_r7","CrearReporteCompraComponent_div_35_Template_mat_checkbox_ngModelChange_1_listener","_r10","column_r8","selected","CrearReporteCompraComponent","dialogRef","from","subtract","toDate","to","montoMayor","min","pattern","montoMenor","formatDecimals","controlName","control","setValue","parseFloat","toFixed","generateReport","selectedHeaders","length","alert","filters","inicio","fin","reportData","filtros","headers","tipoReporte","close","closeDialog","MatDialogRef","CrearReporteCompraComponent_Template","CrearReporteCompraComponent_mat_error_15_Template","CrearReporteCompraComponent_mat_error_16_Template","CrearReporteCompraComponent_Template_input_input_20_listener","CrearReporteCompraComponent_Template_input_blur_20_listener","CrearReporteCompraComponent_mat_error_21_Template","CrearReporteCompraComponent_Template_input_input_25_listener","CrearReporteCompraComponent_Template_input_blur_25_listener","CrearReporteCompraComponent_mat_error_26_Template","CrearReporteCompraComponent_mat_option_31_Template","CrearReporteCompraComponent_div_35_Template","CrearReporteCompraComponent_Template_button_click_37_listener","_r0","controls","hasError","CommonModule","FlexModule","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","FormsModule","ReactiveFormsModule","MatOptionModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","CrearReporteCompraModule","declarations","imports","exports","saveAs","element_r8","nombreProducto","element_r9","ɵɵpipeBind1","element_r10","NotaCompraDetallesComponent","displayedColumns","fecha","body","descargarPDF","pdf","pdfData","atob","byteArray","Uint8Array","i","charCodeAt","blob","Blob","type","NotaCompraDetallesComponent_Template","NotaCompraDetallesComponent_Template_button_click_22_listener","NotaCompraDetallesComponent_Template_button_click_25_listener","NotaCompraDetallesComponent_th_29_Template","NotaCompraDetallesComponent_td_30_Template","NotaCompraDetallesComponent_th_32_Template","NotaCompraDetallesComponent_td_33_Template","NotaCompraDetallesComponent_th_35_Template","NotaCompraDetallesComponent_td_36_Template","NotaCompraDetallesComponent_tr_37_Template","NotaCompraDetallesComponent_tr_38_Template","MatTableModule","NotaCompraDetallesModule","RouterModule","NotaCompraComponent","routes","path","component","NotaCompraRoutingModule","forChild","fileUtil","NotaCompraComponent_button_10_Template_button_click_0_listener","_r9","ctx_r8","generarReporte","NotaCompraComponent_th_13_Template_mat_checkbox_click_1_listener","NotaCompraComponent_td_14_Template_mat_checkbox_click_1_listener","column_r13","row_r18","NotaCompraComponent_ng_container_15_ng_container_1_th_1_Template","NotaCompraComponent_ng_container_15_ng_container_1_td_2_Template","NotaCompraComponent_ng_container_15_ng_container_1_Template","NotaCompraComponent_td_18_Template_button_click_1_listener","NotaCompraComponent_td_18_Template_button_click_6_listener","_r25","row_r21","ctx_r24","verDeatlles","NotaCompraComponent_td_18_Template_button_click_9_listener","ctx_r26","anularNotaDeCompra","_r22","NotaCompraComponent_tr_20_Template_tr_click_0_listener","dialog","userActions","successActionList","getNotasDeCompra","createNotaDeCompra","then","open","width","afterClosed","result","downloadFromBase64","base64Archivo","tipoRespaldo","deleteRequest","MatDialog","i3","NotaCompraComponent_Template","NotaCompraComponent_Template_fury_list_filterChange_4_listener","NotaCompraComponent_Template_button_click_7_listener","NotaCompraComponent_button_10_Template","NotaCompraComponent_th_13_Template","NotaCompraComponent_td_14_Template","NotaCompraComponent_ng_container_15_Template","NotaCompraComponent_th_17_Template","NotaCompraComponent_td_18_Template","NotaCompraComponent_tr_19_Template","NotaCompraComponent_tr_20_Template","toExcelAction","BreadcrumbsModule","ListModule","MatIconModule","MatMenuModule","MatPaginatorModule","MatSortModule","PageLayoutModule","NotaCompraModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}