{"version":3,"file":"src_app_veterinaria_categoria_categoria_module_ts.js","mappings":"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","sources":["./src/app/veterinaria/categoria/categoria-routing.module.ts","./src/app/veterinaria/categoria/categoria.component.ts","./src/app/veterinaria/categoria/categoria.component.html","./src/app/veterinaria/categoria/categoria.module.ts","./src/app/veterinaria/categoria/crear-actualizar-categoria/crear-actualizar-categoria.component.ts","./src/app/veterinaria/categoria/crear-actualizar-categoria/crear-actualizar-categoria.component.html","./src/app/veterinaria/categoria/crear-actualizar-categoria/crear-actualizar-categoria.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CategoriaComponent } from './categoria.component';\n\nconst routes: Routes = [{ path: '', component: CategoriaComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriaRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {ListColumn} from \"../../../@fury/shared/list/list-column.model\";\nimport {ApiClientService} from \"../../service/api-client.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {\n  CrearActualizarServicioComponent\n} from \"../servicio/crear-actualizar-servicio/crear-actualizar-servicio.component\";\nimport {CrearActualizarCategoriaComponent} from \"./crear-actualizar-categoria/crear-actualizar-categoria.component\";\n\n@Component({\n  selector: 'fury-categoria',\n  templateUrl: './categoria.component.html',\n  styleUrls: ['./categoria.component.scss']\n})\nexport class CategoriaComponent implements OnInit{\n\n  dataSource:MatTableDataSource<any> = new MatTableDataSource([]) ;\n\n  columns: ListColumn [] = [\n    { name: 'ID', property: 'id', visible: true, isModelProperty: true },\n    { name: 'Nombre', property: 'nombre', visible: true, isModelProperty: true },\n    { name: 'ID Estante', property: 'estante', visible: true, isModelProperty: true  },\n    { name: 'Actions', property: 'actions', visible: true },\n  ] as ListColumn[];\n\n  pageSize = 10;\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  constructor(private apiClient: ApiClientService,\n              private dialog : MatDialog) {\n\n  }\n\n  ngOnInit(): void {\n    this.getCategorias();\n  }\n\n  getCategorias(){\n    this.apiClient.getRequest('/api/categoria')\n      .subscribe({\n        next:(data:any[]) =>{\n          this.dataSource.data = data;\n          console.log(data);\n        },\n        error:(error) =>{\n          console.error(error)\n        }\n      })\n  }\n\n  createCategoria(){\n    console.info('Abre dialogo de creacion');\n    this.dialog.open(CrearActualizarCategoriaComponent, {width: '400px'})\n      .afterClosed()\n      .subscribe((data:any) => {\n        if (data){\n          console.info('Al cerrar', data);\n          this.apiClient.postRequest('/api/categoria',data)\n            .subscribe({\n              next:(body:any) =>{\n                console.info('OK', body);\n                this.getCategorias();\n              },\n              error:(error) =>{\n                console.error('error', error)\n              }\n            })\n          console.info('Fin api call');\n        }else{\n          console.info('Cancelado')\n        }\n        console.info('Fin Metodo');\n      })\n  }\n\n  updateCategoria(row){\n    console.info(row)\n    this.dialog.open(CrearActualizarCategoriaComponent,{data: row, width: '400px'})\n      .afterClosed()\n      .subscribe((data: any) => {\n        if (data){\n          this.apiClient.putRequest('/api/categoria',data.id,data)\n            .subscribe({\n              next:(body:any) => {\n                this.getCategorias()\n              },\n              error : (error) => {\n                console.info(error)\n              }\n            })\n        }else {\n          console.info('Cancelado')\n        }\n      })\n  }\n\n\n  deleteCategoria(row){\n    console.info('deleteServicio', row)\n    this.apiClient.deleteRequest(row.id,'/api/categoria')\n      .subscribe({\n        next : (body:any) => {\n          this.getCategorias();\n        },\n        error :(error) => {\n          console.info(error);\n        }\n      })\n  }\n\n  onFilterChange(value) {\n    console.info(event)\n\n    if (!this.dataSource) {\n      return;\n    }\n\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n}\n","<fury-page-layout mode=\"card\">\n  <fury-page-layout-header>\n    <fury-breadcrumbs [crumbs]=\"['Categorias']\" current=\"Categoria\"></fury-breadcrumbs>\n  </fury-page-layout-header>\n\n  <fury-page-layout-content>\n    <fury-list name=\"Categoria\" [columns]=\"[]\" (filterChange)=\"onFilterChange($event)\">\n      <div class=\"actions\">\n        <button class=\"create\" (click)=\"createCategoria()\" type=\"button\" mat-mini-fab color=\"primary\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n\n      <table [dataSource]=\"dataSource\" mat-table matSort>\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"checkbox\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <!-- fullName Column -->\n        <ng-container *ngFor=\"let column of columns\">\n          <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n            <td *matCellDef=\"let row\" mat-cell>\n              {{ row[column.property] }}\n            </td>\n          </ng-container>\n        </ng-container>\n\n\n        <!--          actions Column-->\n        <ng-container matColumnDef=\"actions\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\">\n              <mat-icon>more_horiz</mat-icon>\n            </button>\n\n            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n              <button (click)=\"updateCategoria(row)\" mat-menu-item>\n                <span>Modify</span>\n              </button>\n              <button (click)=\"deleteCategoria(row)\" mat-menu-item>\n                <span>Delete</span>\n              </button>\n            </mat-menu>\n          </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n        <tr (click)=\"updateCategoria(row)\"\n            *matRowDef=\"let row; columns: visibleColumns;\"\n            class=\"clickable route-animations-elements\"\n            mat-row></tr>\n      </table>\n\n      <mat-paginator class=\"paginator\" [pageSize]=\"pageSize\"></mat-paginator>\n\n    </fury-list>\n\n  </fury-page-layout-content>\n</fury-page-layout>\n\n\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriaRoutingModule } from './categoria-routing.module';\nimport { CategoriaComponent } from './categoria.component';\nimport {BreadcrumbsModule} from \"../../../@fury/shared/breadcrumbs/breadcrumbs.module\";\nimport {ListModule} from \"../../../@fury/shared/list/list.module\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {PageLayoutModule} from \"../../../@fury/shared/page-layout/page-layout.module\";\nimport {CrearActualizarCategoriaModule} from \"./crear-actualizar-categoria/crear-actualizar-categoria.module\";\n\n\n@NgModule({\n  declarations: [\n    CategoriaComponent\n  ],\n  imports: [\n    CommonModule,\n    CategoriaRoutingModule,\n    BreadcrumbsModule,\n    ListModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    PageLayoutModule,\n    CrearActualizarCategoriaModule\n  ]\n})\nexport class CategoriaModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {UntypedFormControl, UntypedFormGroup} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ApiClientService} from \"../../../service/api-client.service\";\n\n@Component({\n  selector: 'fury-crear-actualizar-categoria',\n  templateUrl: './crear-actualizar-categoria.component.html',\n  styleUrls: ['./crear-actualizar-categoria.component.scss']\n})\nexport class CrearActualizarCategoriaComponent implements OnInit{\n  form : UntypedFormGroup;\n  estanteList : any[]=[];\n  mode : 'create' | 'update' = 'create';\n\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\n              private dialogRef: MatDialogRef<CrearActualizarCategoriaComponent>,\n              private apiClient : ApiClientService) {\n  }\n\n  ngOnInit(): void {\n    if (this.defaults){\n      this.mode = 'update';\n    }else{\n      this.defaults ={} as any;\n    }\n\n    this.apiClient.getRequest('/api/estante')\n      .subscribe({\n        next:(data : any[]) => {\n          this.estanteList = data;\n          console.log('ListEstante ',data)\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n\n    this.form = new UntypedFormGroup({\n      nombre: new UntypedFormControl(this.defaults.nombre),\n      idEstante: new UntypedFormControl(this.defaults.idEstante),\n      // idCategoria: new UntypedFormControl(this.defaults.idCategoria)\n    })\n  }\n\n  save() {\n    // this.createCustomer();\n    console.log(this.form.value)\n    // return;\n    if (this.mode === 'create') {\n      this.createCustomer();\n    } else if (this.mode === 'update') {\n      this.updateCustomer();\n    }\n  }\n  createCustomer() {\n    const customer = this.form.value;\n    this.dialogRef.close(customer);\n  }\n\n  updateCustomer() {\n    const customer = this.form.value;\n    customer.id = this.defaults.id;\n\n    this.dialogRef.close(customer);\n  }\n\n  isCreateMode() {\n    return this.mode === 'create';\n  }\n\n  isUpdateMode() {\n    return this.mode === 'update';\n  }\n}\n","<div mat-dialog-title>{{ isCreateMode() ? 'Crear' : 'Actualizar' }} Categoria</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n  <mat-dialog-content>\n    <div fxLayout=\"column wrap\">\n\n      <mat-form-field fxFlex>\n        <mat-label>Nombre</mat-label>\n        <input type=\"text\" formControlName=\"nombre\" matInput>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Estante</mat-label>\n        <mat-select formControlName=\"idEstante\">\n          <mat-option *ngFor=\"let option of estanteList\"\n                      [value]=\"option.id\">\n            {{option.nombre}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button *ngIf=\"isCreateMode()\"\n            mat-flat-button\n            color=\"primary\"\n            [disabled]=\"!form.valid\">Registrar Categoria\n    </button>\n    <button *ngIf=\"isUpdateMode()\"\n            mat-flat-button\n            color=\"primary\"\n            [disabled]=\"!form.valid\">Actualizar Categoria\n    </button>\n  </mat-dialog-actions>\n</form>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CrearActualizarCategoriaComponent } from './crear-actualizar-categoria.component';\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n\n\n@NgModule({\n  declarations: [\n    CrearActualizarCategoriaComponent\n  ],\n  exports:[CrearActualizarCategoriaComponent],\n    imports: [\n        CommonModule,\n        FlexModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        ReactiveFormsModule,\n        MatOptionModule,\n        MatSelectModule\n    ]\n})\nexport class CrearActualizarCategoriaModule { }\n"],"names":["RouterModule","CategoriaComponent","routes","path","component","CategoriaRoutingModule","forChild","imports","i1","exports","MatTableDataSource","CrearActualizarCategoriaComponent","i0","ɵɵelementStart","ɵɵlistener","CategoriaComponent_th_11_Template_mat_checkbox_click_1_listener","$event","stopPropagation","ɵɵelementEnd","CategoriaComponent_td_12_Template_mat_checkbox_click_1_listener","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","column_r10","name","row_r15","property","ɵɵelementContainerStart","ɵɵtemplate","CategoriaComponent_ng_container_13_ng_container_1_th_1_Template","CategoriaComponent_ng_container_13_ng_container_1_td_2_Template","ɵɵelementContainerEnd","ɵɵproperty","CategoriaComponent_ng_container_13_ng_container_1_Template","isModelProperty","ɵɵelement","CategoriaComponent_td_16_Template_button_click_1_listener","CategoriaComponent_td_16_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r22","row_r18","$implicit","ctx_r21","ɵɵnextContext","ɵɵresetView","updateCategoria","CategoriaComponent_td_16_Template_button_click_9_listener","ctx_r23","deleteCategoria","_r19","CategoriaComponent_tr_18_Template_tr_click_0_listener","_r26","row_r24","ctx_r25","visibleColumns","columns","filter","column","visible","map","constructor","apiClient","dialog","dataSource","pageSize","ngOnInit","getCategorias","getRequest","subscribe","next","data","console","log","error","createCategoria","info","open","width","afterClosed","postRequest","body","row","putRequest","id","deleteRequest","onFilterChange","value","event","trim","toLowerCase","ɵɵdirectiveInject","ApiClientService","i2","MatDialog","selectors","decls","vars","consts","template","CategoriaComponent_Template","rf","ctx","CategoriaComponent_Template_fury_list_filterChange_4_listener","CategoriaComponent_Template_button_click_6_listener","CategoriaComponent_th_11_Template","CategoriaComponent_td_12_Template","CategoriaComponent_ng_container_13_Template","CategoriaComponent_th_15_Template","CategoriaComponent_td_16_Template","CategoriaComponent_tr_17_Template","CategoriaComponent_tr_18_Template","ɵɵpureFunction0","_c0","_c1","CommonModule","BreadcrumbsModule","ListModule","MatButtonModule","MatCheckboxModule","MatIconModule","MatMenuModule","MatPaginatorModule","MatSortModule","MatTableModule","PageLayoutModule","CrearActualizarCategoriaModule","CategoriaModule","declarations","UntypedFormControl","UntypedFormGroup","MAT_DIALOG_DATA","option_r3","nombre","ctx_r1","form","valid","ctx_r2","defaults","dialogRef","estanteList","mode","idEstante","save","createCustomer","updateCustomer","customer","close","isCreateMode","isUpdateMode","MatDialogRef","CrearActualizarCategoriaComponent_Template","CrearActualizarCategoriaComponent_Template_form_ngSubmit_2_listener","CrearActualizarCategoriaComponent_mat_option_13_Template","CrearActualizarCategoriaComponent_button_15_Template","CrearActualizarCategoriaComponent_button_16_Template","FlexModule","MatDialogModule","MatFormFieldModule","MatInputModule","ReactiveFormsModule","MatOptionModule","MatSelectModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}