{"version":3,"file":"src_app_veterinaria_nota-salida_nota-salida_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACoE;AACG;;;;;;;;;;;;;;ICK7DG,4DAAA,qBACgC;IAC9BA,oDAAA,GACF;IAAAA,0DAAA,EAAa;;;;IAFDA,wDAAA,UAAAK,SAAA,CAAAC,EAAA,CAAmB;IAC7BN,uDAAA,GACF;IADEA,gEAAA,MAAAK,SAAA,CAAAI,MAAA,MACF;;;;;IAuBNT,4DAAA,iBAGiC;IAAAA,oDAAA,4BACjC;IAAAA,0DAAA,EAAS;;;;IADDA,wDAAA,cAAAU,MAAA,CAAAC,IAAA,CAAAC,KAAA,CAAwB;;;;;IAEhCZ,4DAAA,iBAGiC;IAAAA,oDAAA,iCACjC;IAAAA,0DAAA,EAAS;;;;IADDA,wDAAA,cAAAa,MAAA,CAAAF,IAAA,CAAAC,KAAA,CAAwB;;;ADpCpC,MAKaE,kCAAkC;EAK7C;EACAC,YAA4CC,QAAa,EACrCC,SAA2D,EAC3DC,SAA4B;IAFJ,KAAAF,QAAQ,GAARA,QAAQ;IAChC,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,SAAS,GAATA,SAAS;IAL7B,KAAAC,IAAI,GAAwB,QAAQ;IACpC,KAAAC,aAAa,GAAU,EAAE;EAKzB;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,QAAQ,EAAC;MAChB,IAAI,CAACG,IAAI,GAAG,QAAQ;MACpB,MAAMG,KAAK,GAAG,IAAI,CAACN,QAAQ,CAACO,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;MAC5C,IAAI,CAACR,QAAQ,CAACO,KAAK,GAAG,GAAGD,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;KAC5D,MAAI;MACH,IAAI,CAACN,QAAQ,GAAE,EAAS;;IAE1B,IAAI,CAACL,IAAI,GAAG,IAAIb,4DAAgB,CAAC;MAC/B2B,UAAU,EAAE,IAAI5B,8DAAkB,CAAC,IAAI,CAACmB,QAAQ,CAACS,UAAU,CAAC;MAC5DF,KAAK,EAAE,IAAI1B,8DAAkB,CAAC,IAAI,CAACmB,QAAQ,CAACO,KAAK,CAAC;MAClDG,QAAQ,EAAE,IAAI7B,8DAAkB,CAAC,IAAI,CAACmB,QAAQ,CAACU,QAAQ,CAAC;MACxDC,MAAM,EAAE,IAAI9B,8DAAkB,CAAC,IAAI,CAACmB,QAAQ,CAACW,MAAM;KACpD,CAAC;IAEF,IAAI,CAACT,SAAS,CAACU,UAAU,CAAC,eAAe,CAAC,CACvCC,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAe,IAAI;QACxB,IAAI,CAACX,aAAa,GAAGW,QAAQ;QAC7BC,OAAO,CAACC,IAAI,CAACF,QAAQ,CAAC;MACxB,CAAC;MACDG,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;KACD,CAAC;EAEN;EAEAC,IAAIA,CAAA;IACF;IACAH,OAAO,CAACI,GAAG,CAAC,IAAI,CAACzB,IAAI,CAAC0B,KAAK,CAAC;IAC5B;IACA,IAAI,IAAI,CAAClB,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAI,CAACmB,cAAc,EAAE;KACtB,MAAM,IAAI,IAAI,CAACnB,IAAI,KAAK,QAAQ,EAAE;MACjC,IAAI,CAACoB,cAAc,EAAE;;EAEzB;EACAD,cAAcA,CAAA;IACZ,MAAME,QAAQ,GAAG,IAAI,CAAC7B,IAAI,CAAC0B,KAAK;IAChC,IAAI,CAACpB,SAAS,CAACwB,KAAK,CAACD,QAAQ,CAAC;EAChC;EAEAD,cAAcA,CAAA;IACZ,MAAMC,QAAQ,GAAG,IAAI,CAAC7B,IAAI,CAAC0B,KAAK;IAChCG,QAAQ,CAAClC,EAAE,GAAG,IAAI,CAACU,QAAQ,CAACV,EAAE;IAE9B,IAAI,CAACW,SAAS,CAACwB,KAAK,CAACD,QAAQ,CAAC;EAChC;EAEAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACvB,IAAI,KAAK,QAAQ;EAC/B;EAEAwB,YAAYA,CAAA;IACV,OAAO,IAAI,CAACxB,IAAI,KAAK,QAAQ;EAC/B;;;uBAnEWL,kCAAkC,EAAAd,+DAAA,CAMzBD,qEAAe,GAAAC,+DAAA,CAAA6C,kEAAA,GAAA7C,+DAAA,CAAA+C,yEAAA;IAAA;EAAA;;;YANxBjC,kCAAkC;MAAAmC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4CAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV/CvD,4DAAA,aAAsB;UAAAA,oDAAA,GAA4D;UAAAA,0DAAA,EAAM;UACxFA,4DAAA,cAA6C;UAApBA,wDAAA,sBAAA0D,qEAAA;YAAA,OAAYF,GAAA,CAAArB,IAAA,EAAM;UAAA,EAAC;UAC1CnC,4DAAA,yBAAoB;UAGHA,oDAAA,gBAAS;UAAAA,0DAAA,EAAY;UAChCA,4DAAA,oBAAyC;UACvCA,wDAAA,IAAA4D,wDAAA,wBAGa;UACf5D,0DAAA,EAAa;UAGfA,4DAAA,yBAAuB;UACVA,oDAAA,aAAK;UAAAA,0DAAA,EAAY;UAC5BA,uDAAA,gBAAoD;UACtDA,0DAAA,EAAiB;UAEjBA,4DAAA,yBAAuB;UACVA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAY;UAC/BA,uDAAA,gBAAuD;UACzDA,0DAAA,EAAiB;UAEjBA,4DAAA,yBAAuB;UACVA,oDAAA,cAAM;UAAAA,0DAAA,EAAY;UAC7BA,uDAAA,gBAAqD;UACvDA,0DAAA,EAAiB;UAKrBA,4DAAA,6BAA8D;UAC5DA,wDAAA,KAAA8D,qDAAA,qBAIS;UACT9D,wDAAA,KAAA+D,qDAAA,qBAIS;UACX/D,0DAAA,EAAqB;;;UA3CDA,uDAAA,GAA4D;UAA5DA,gEAAA,KAAAwD,GAAA,CAAAd,YAAA,+CAA4D;UAC5E1C,uDAAA,GAAkB;UAAlBA,wDAAA,cAAAwD,GAAA,CAAA7C,IAAA,CAAkB;UAMiBX,uDAAA,GAAgB;UAAhBA,wDAAA,YAAAwD,GAAA,CAAApC,aAAA,CAAgB;UA0B5CpB,uDAAA,IAAoB;UAApBA,wDAAA,SAAAwD,GAAA,CAAAd,YAAA,GAAoB;UAKpB1C,uDAAA,GAAoB;UAApBA,wDAAA,SAAAwD,GAAA,CAAAb,YAAA,GAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCc;AAC+C;AAC9C;AACgB;AACP;AACA;AACO;AACT;AACA;AACE;;AAIzD,MAkBa+B,+BAA+B;;;uBAA/BA,+BAA+B;IAAA;EAAA;;;YAA/BA;IAA+B;EAAA;;;gBAZxCV,yDAAY,EACZC,4DAAU,EACVC,uDAAW,EACXE,qEAAe,EACfC,qEAAe,EACfC,4EAAkB,EAClBC,mEAAc,EACdJ,+DAAmB,EACnBK,mEAAe,EACfC,sEAAe;IAAA;EAAA;;AAGyB;;sHAA/BC,+BAA+B;IAAAC,YAAA,GAhBxC7D,uGAAkC;IAAA8D,OAAA,GAIlCZ,yDAAY,EACZC,4DAAU,EACVC,uDAAW,EACXE,qEAAe,EACfC,qEAAe,EACfC,4EAAkB,EAClBC,mEAAc,EACdJ,+DAAmB,EACnBK,mEAAe,EACfC,sEAAe;IAAAI,OAAA,GAXN/D,uGAAkC;EAAA;AAAA;;;;;;;;;;;;;;;;;ACjBQ;AACO;;;AAE9D,MAAMkE,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,uEAAmBA;AAAA,CAAE,CAAC;AAErE,MAIaI,uBAAuB;;;uBAAvBA,uBAAuB;IAAA;EAAA;;;YAAvBA;IAAuB;EAAA;;;gBAHxBL,yDAAY,CAACM,QAAQ,CAACJ,MAAM,CAAC,EAC7BF,yDAAY;IAAA;EAAA;;AAEY;;sHAAvBK,uBAAuB;IAAAP,OAAA,GAAA/B,yDAAA;IAAAgC,OAAA,GAFxBC,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP8B;AACK;AAUoB;AAEpC;AACP;;;;;;;;;;;;;;;;;;;ICK1B9E,4DAAA,aAA2D;IAC3BA,wDAAA,mBAAAyF,iEAAAC,MAAA;MAAA,OAASA,MAAA,CAAAC,eAAA,EAAwB;IAAA,EAAC;IAAC3F,0DAAA,EAAe;;;;;IAElFA,4DAAA,aAAwD;IACxBA,wDAAA,mBAAA4F,iEAAAF,MAAA;MAAA,OAASA,MAAA,CAAAC,eAAA,EAAwB;IAAA,EAAC;IAAC3F,0DAAA,EAAe;;;;;IAOhFA,4DAAA,aAAsD;IAACA,oDAAA,GAAiB;IAAAA,0DAAA,EAAK;;;;IAAtBA,uDAAA,GAAiB;IAAjBA,gEAAA,MAAA6F,UAAA,CAAAC,IAAA,KAAiB;;;;;IACxE9F,4DAAA,aAAmC;IACjCA,oDAAA,GACF;IAAAA,0DAAA,EAAK;;;;;IADHA,uDAAA,GACF;IADEA,gEAAA,MAAA+F,OAAA,CAAAF,UAAA,CAAAG,QAAA,OACF;;;;;IAJFhG,qEAAA,OAA8E;IAC5EA,wDAAA,IAAAkG,gEAAA,iBAA6E;IAC7ElG,wDAAA,IAAAmG,gEAAA,iBAEK;IACPnG,mEAAA,EAAe;;;;IAL8BA,wDAAA,iBAAA6F,UAAA,CAAAG,QAAA,CAAgC;;;;;IAD/EhG,qEAAA,GAA6C;IAC3CA,wDAAA,IAAAqG,2DAAA,2BAKe;IACjBrG,mEAAA,EAAe;;;;IANEA,uDAAA,GAA4B;IAA5BA,wDAAA,SAAA6F,UAAA,CAAAS,eAAA,CAA4B;;;;;IAW3CtG,uDAAA,aAAgF;;;;;;IAChFA,4DAAA,aAAwD;IACkBA,wDAAA,mBAAAuG,2DAAAb,MAAA;MAAA,OAASA,MAAA,CAAAC,eAAA,EAAwB;IAAA,EAAC;IACxG3F,4DAAA,eAAU;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EAAW;IAGjCA,4DAAA,uBAAsE;IAC5DA,wDAAA,mBAAAwG,2DAAA;MAAA,MAAAC,WAAA,GAAAzG,2DAAA,CAAA2G,IAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,OAAA,GAAA9G,2DAAA;MAAA,OAASA,yDAAA,CAAA8G,OAAA,CAAAG,gBAAA,CAAAL,OAAA,CAAqB;IAAA,EAAC;IACrC5G,4DAAA,WAAM;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAO;IAErBA,4DAAA,iBAAsD;IAA9CA,wDAAA,mBAAAkH,2DAAA;MAAA,MAAAT,WAAA,GAAAzG,2DAAA,CAAA2G,IAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAM,OAAA,GAAAnH,2DAAA;MAAA,OAASA,yDAAA,CAAAmH,OAAA,CAAAC,gBAAA,CAAAR,OAAA,CAAqB;IAAA,EAAC;IACrC5G,4DAAA,YAAM;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAO;;;;IATeA,uDAAA,GAAiC;IAAjCA,wDAAA,sBAAAqH,IAAA,CAAiC;;;;;IAe3ErH,uDAAA,aAA0D;;;;;;IAC1DA,4DAAA,aAGY;IAHRA,wDAAA,mBAAAsH,uDAAA;MAAA,MAAAb,WAAA,GAAAzG,2DAAA,CAAAuH,IAAA;MAAA,MAAAC,OAAA,GAAAf,WAAA,CAAAI,SAAA;MAAA,MAAAY,OAAA,GAAAzH,2DAAA;MAAA,OAASA,yDAAA,CAAAyH,OAAA,CAAAR,gBAAA,CAAAO,OAAA,CAAqB;IAAA,EAAC;IAGvBxH,0DAAA,EAAK;;;;;;;;;AD7CzB,MAKa+E,mBAAmB;EAe9B,IAAI2C,cAAcA,CAAA;IAChB,OAAO,IAAI,CAACC,OAAO,CAACC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,OAAO,CAAC,CAACC,GAAG,CAACF,MAAM,IAAIA,MAAM,CAAC7B,QAAQ,CAAC;EACrF;EAEAjF,YAAoBG,SAA2B,EAC3B8G,MAAiB;IADjB,KAAA9G,SAAS,GAATA,SAAS;IACT,KAAA8G,MAAM,GAANA,MAAM;IAjB1B,KAAAC,UAAU,GAA4B,IAAI3C,uEAAkB,CAAC,EAAE,CAAC;IAChE,KAAAqC,OAAO,GAAiB,CACtB;MAAC7B,IAAI,EAAE,IAAI;MAAEE,QAAQ,EAAE,IAAI;MAAE8B,OAAO,EAAE,IAAI;MAAExB,eAAe,EAAE;IAAI,CAAC,EAClE;MAACR,IAAI,EAAE,OAAO;MAAEE,QAAQ,EAAE,OAAO;MAAE8B,OAAO,EAAE,IAAI;MAAExB,eAAe,EAAE;IAAI,CAAC,EACxE;MAACR,IAAI,EAAE,UAAU;MAAEE,QAAQ,EAAE,gBAAgB;MAAE8B,OAAO,EAAE,IAAI;MAAExB,eAAe,EAAE;IAAI,CAAC,EACpF;MAACR,IAAI,EAAE,UAAU;MAAEE,QAAQ,EAAE,UAAU;MAAE8B,OAAO,EAAE,IAAI;MAAExB,eAAe,EAAE;IAAI,CAAC,EAC9E;MAACR,IAAI,EAAE,QAAQ;MAAEE,QAAQ,EAAE,QAAQ;MAAE8B,OAAO,EAAE,IAAI;MAAExB,eAAe,EAAE;IAAI,CAAC,EAC1E;MAACR,IAAI,EAAE,SAAS;MAAEE,QAAQ,EAAE,SAAS;MAAE8B,OAAO,EAAE;IAAI,CAAC,CACtC;IAEjB,KAAAI,QAAQ,GAAG,EAAE;IAQX,IAAI,CAACvH,IAAI,GAAG,IAAI0E,qDAAS,CAAC,EACzB,CAAC;EACJ;EAEAhE,QAAQA,CAAA;IACN,IAAI,CAAC8G,cAAc,EAAE;EACvB;EAECA,cAAcA,CAAA;IACb,IAAI,CAACjH,SAAS,CAACU,UAAU,CAAC,iBAAiB,CAAC,CACzCC,SAAS,CAAC;MACTC,IAAI,EAAGsG,KAAY,IAAI;QACtB,IAAI,CAACH,UAAU,CAACI,IAAI,GAAGD,KAAK;QAC3BpG,OAAO,CAACI,GAAG,CAACgG,KAAK,CAAC;MACpB,CAAC;MACDlG,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;KACD,CAAC;EACN;EAGAoG,gBAAgBA,CAAA;IACdtG,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;IAC5B,IAAI,CAAC+F,MAAM,CAACO,IAAI,CAACzH,oIAAkC,EAAE;MAAC0H,KAAK,EAAE;IAAO,CAAC,CAAC,CAACC,WAAW,EAAE,CAAC5G,SAAS,CAAEwG,IAAS,IAAI;MAC3G,IAAIA,IAAI,EAAE;QACRrG,OAAO,CAACC,IAAI,CAAC,WAAW,EAAEoG,IAAI,CAAC;QAC/B,IAAIA,IAAI,CAAC9G,KAAK,EAAC;UACb8G,IAAI,CAAC9G,KAAK,GAAGgE,4DAAU,CAAC8C,IAAI,CAAC9G,KAAK,EAAC,YAAY,EAAC,IAAI,CAAC;;QAEvD,IAAI,CAACL,SAAS,CAACwH,WAAW,CAAC,iBAAiB,EAAEL,IAAI,CAAC,CAChDxG,SAAS,CAAC;UACTC,IAAI,EAAG6G,IAAS,IAAI;YAClB3G,OAAO,CAACC,IAAI,CAAC,IAAI,EAAE0G,IAAI,CAAC;YACxB,IAAI,CAACR,cAAc,EAAE;UACvB,CAAC;UACDjG,KAAK,EAAGA,KAAK,IAAI;YACfF,OAAO,CAACE,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;UAC/B;SACD,CAAC;QACJF,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;OAC7B,MAAM;QACLD,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;;IAE7B,CAAC,CAAC;IACFD,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;EAC5B;EAEAmF,gBAAgBA,CAACwB,GAAG;IAClB;IACA,IAAI,CAAC1H,SAAS,CAAC2H,aAAa,CAACD,GAAG,CAACtI,EAAE,EAAE,iBAAiB,CAAC,CACpDuB,SAAS,CAAC;MACTC,IAAI,EAAG6G,IAAS,IAAI;QAClB,IAAI,CAACR,cAAc,EAAE;MACvB,CAAC;MACDjG,KAAK,EAAGA,KAAK,IAAI;QACf;MAAA;KAEH,CAAC;EACN;EAEA+E,gBAAgBA,CAAC2B,GAAG;IAClB5G,OAAO,CAACC,IAAI,CAAC2G,GAAG,CAAC;IACjB,MAAME,OAAO,GAAGtD,sDAAS,CAACoD,GAAG,CAAC;IAC9B5G,OAAO,CAACC,IAAI,CAAC,SAAS,EAAC6G,OAAO,CAAC;IAC/B,IAAI,CAACd,MAAM,CAACO,IAAI,CAACzH,oIAAkC,EAAE;MAACuH,IAAI,EAAES,OAAO;MAAEN,KAAK,EAAE;IAAO,CAAC,CAAC,CAACC,WAAW,EAAE,CAAC5G,SAAS,CAAEwG,IAAS,IAAI;MAC1H,IAAIA,IAAI,EAAE;QACR,IAAIA,IAAI,CAAC9G,KAAK,EAAC;UACb8G,IAAI,CAAC9G,KAAK,GAAGgE,4DAAU,CAAC8C,IAAI,CAAC9G,KAAK,EAAC,YAAY,EAAC,IAAI,CAAC;;QAEvD,IAAI,CAACL,SAAS,CAAC6H,UAAU,CAAC,iBAAiB,EAAEV,IAAI,CAAC/H,EAAE,EAAE+H,IAAI,CAAC,CACxDxG,SAAS,CAAC;UACTC,IAAI,EAAG6G,IAAS,IAAI;YAClB,IAAI,CAACR,cAAc,EAAE;UACvB,CAAC;UACDjG,KAAK,EAAGA,KAAK,IAAI;YACfF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;UACtB;SACD,CAAC;OACL,MAAM;QACLF,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;;IAE7B,CAAC,CAAC;EACJ;EAEA+G,cAAcA,CAAC3G,KAAK;IAClBL,OAAO,CAACC,IAAI,CAACgH,KAAK,CAAC;IAEnB,IAAI,CAAC,IAAI,CAAChB,UAAU,EAAE;MACpB;;IAGF5F,KAAK,GAAGA,KAAK,CAAC6G,IAAI,EAAE;IACpB7G,KAAK,GAAGA,KAAK,CAAC8G,WAAW,EAAE;IAC3B,IAAI,CAAClB,UAAU,CAACL,MAAM,GAAGvF,KAAK;EAChC;;;uBApHW0C,mBAAmB,EAAA/E,+DAAA,CAAA6C,yEAAA,GAAA7C,+DAAA,CAAA+C,gEAAA;IAAA;EAAA;;;YAAnBgC,mBAAmB;MAAA9B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAgG,6BAAA9F,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCtBhCvD,4DAAA,0BAA8B;UAE1BA,uDAAA,0BAA6F;UAC/FA,0DAAA,EAA0B;UAE1BA,4DAAA,+BAA0B;UACwBA,wDAAA,0BAAAsJ,+DAAA5D,MAAA;YAAA,OAAgBlC,GAAA,CAAAwF,cAAA,CAAAtD,MAAA,CAAsB;UAAA,EAAC;UACrF1F,4DAAA,aAAqB;UACIA,wDAAA,mBAAAuJ,qDAAA;YAAA,OAAS/F,GAAA,CAAA8E,gBAAA,EAAkB;UAAA,EAAC;UACjDtI,4DAAA,eAAU;UAAAA,oDAAA,UAAG;UAAAA,0DAAA,EAAW;UAI5BA,4DAAA,eAAmD;UAMjDA,qEAAA,OAAsC;UACpCA,wDAAA,KAAAwJ,kCAAA,gBAEK;UACLxJ,wDAAA,KAAAyJ,kCAAA,gBAEK;UACPzJ,mEAAA,EAAe;UAGfA,wDAAA,KAAA0J,4CAAA,0BAOe;UAIf1J,qEAAA,QAAqC;UACnCA,wDAAA,KAAA2J,kCAAA,iBAAgF;UAChF3J,wDAAA,KAAA4J,kCAAA,iBAaK;UACP5J,mEAAA,EAAe;UAEfA,wDAAA,KAAA6J,kCAAA,iBAA0D;UAC1D7J,wDAAA,KAAA8J,kCAAA,iBAGiB;UACnB9J,0DAAA,EAAQ;UAERA,uDAAA,yBAAuE;UAEzEA,0DAAA,EAAY;;;UAjEMA,uDAAA,GAA8B;UAA9BA,wDAAA,WAAAA,6DAAA,IAAAgK,GAAA,EAA8B;UAIfhK,uDAAA,GAAc;UAAdA,wDAAA,YAAAA,6DAAA,IAAAiK,GAAA,EAAc;UAOtCjK,uDAAA,GAAyB;UAAzBA,wDAAA,eAAAwD,GAAA,CAAAyE,UAAA,CAAyB;UAgBGjI,uDAAA,GAAU;UAAVA,wDAAA,YAAAwD,GAAA,CAAAmE,OAAA,CAAU;UA6BtC3H,uDAAA,GAA+B;UAA/BA,wDAAA,oBAAAwD,GAAA,CAAAkE,cAAA,CAA+B;UAEX1H,uDAAA,GAAwB;UAAxBA,wDAAA,qBAAAwD,GAAA,CAAAkE,cAAA,CAAwB;UAKlB1H,uDAAA,GAAqB;UAArBA,wDAAA,aAAAwD,GAAA,CAAA0E,QAAA,CAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEb;AAEwB;AACT;AACyB;AACrB;AACT;AACI;AACR;AACA;AACU;AACV;AACE;AAC+B;AAC6B;;AAGnH,MAoBayC,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAfrB3G,yDAAY,EACZmB,gFAAuB,EACvB+E,0FAAiB,EACjBC,qEAAU,EACV/F,qEAAe,EACfgG,yEAAiB,EACjBC,kEAAa,EACbC,kEAAa,EACbC,4EAAkB,EAClBC,kEAAa,EACbC,oEAAc,EACdC,yFAAgB,EAChBhG,8HAA+B;IAAA;EAAA;;AAGV;;sHAAhBiG,gBAAgB;IAAAhG,YAAA,GAlBzBI,uEAAmB;IAAAH,OAAA,GAGfZ,yDAAY,EACZmB,gFAAuB,EACvB+E,0FAAiB,EACjBC,qEAAU,EACV/F,qEAAe,EACfgG,yEAAiB,EACjBC,kEAAa,EACbC,kEAAa,EACbC,4EAAkB,EAClBC,kEAAa,EACbC,oEAAc,EACdC,yFAAgB,EAChBhG,8HAA+B;EAAA;AAAA","sources":["./src/app/veterinaria/nota-salida/crear-actualizar-nota-salida/crear-actualizar-nota-salida.component.ts","./src/app/veterinaria/nota-salida/crear-actualizar-nota-salida/crear-actualizar-nota-salida.component.html","./src/app/veterinaria/nota-salida/crear-actualizar-nota-salida/crear-actualizar-nota-salida.module.ts","./src/app/veterinaria/nota-salida/nota-salida-routing.module.ts","./src/app/veterinaria/nota-salida/nota-salida.component.ts","./src/app/veterinaria/nota-salida/nota-salida.component.html","./src/app/veterinaria/nota-salida/nota-salida.module.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {UntypedFormControl, UntypedFormGroup} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {ApiClientService} from \"../../../service/api-client.service\";\n\n@Component({\n  selector: 'fury-crear-actualizar-nota-salida',\n  templateUrl: './crear-actualizar-nota-salida.component.html',\n  styleUrls: ['./crear-actualizar-nota-salida.component.scss']\n})\nexport class CrearActualizarNotaSalidaComponent implements OnInit{\n\n  form : UntypedFormGroup;\n  mode: 'create' | 'update' = 'create';\n  productosList: any[] = []\n  //Revisar para entender despues...\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\n              private dialogRef: MatDialogRef<CrearActualizarNotaSalidaComponent>,\n              private apiClient : ApiClientService) {\n  }\n\n  ngOnInit():void {\n    if (this.defaults){\n      this.mode = 'update';\n      const parts = this.defaults.fecha.split('/')\n      this.defaults.fecha = `${parts[2]}-${parts[1]}-${parts[0]}`\n    }else{\n      this.defaults ={} as any;\n    }\n    this.form = new UntypedFormGroup({\n      idProducto: new UntypedFormControl(this.defaults.idProducto),\n      fecha: new UntypedFormControl(this.defaults.fecha),\n      cantidad: new UntypedFormControl(this.defaults.cantidad),\n      motivo: new UntypedFormControl(this.defaults.motivo),\n    })\n\n    this.apiClient.getRequest('/api/producto')\n      .subscribe({\n        next: (producto: any[]) => {\n          this.productosList = producto\n          console.info(producto)\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n\n  }\n\n  save() {\n    // this.createCustomer();\n    console.log(this.form.value)\n    // return;\n    if (this.mode === 'create') {\n      this.createCustomer();\n    } else if (this.mode === 'update') {\n      this.updateCustomer();\n    }\n  }\n  createCustomer() {\n    const customer = this.form.value;\n    this.dialogRef.close(customer);\n  }\n\n  updateCustomer() {\n    const customer = this.form.value;\n    customer.id = this.defaults.id;\n\n    this.dialogRef.close(customer);\n  }\n\n  isCreateMode() {\n    return this.mode === 'create';\n  }\n\n  isUpdateMode() {\n    return this.mode === 'update';\n  }\n}\n","<div mat-dialog-title>{{ isCreateMode() ? 'Crear' : 'Actualizar' }} Nota de Salida</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n  <mat-dialog-content>\n    <div fxLayout=\"column wrap\">\n      <mat-form-field>\n        <mat-label>Productos</mat-label>\n        <mat-select formControlName=\"idProducto\">\n          <mat-option *ngFor=\"let option of productosList\"\n                      [value]=\"option.id\">\n            {{option.nombre}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Fecha</mat-label>\n        <input type=\"date\" formControlName=\"fecha\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Cantidad</mat-label>\n        <input type=\"text\" formControlName=\"cantidad\" matInput>\n      </mat-form-field>\n\n      <mat-form-field fxFlex>\n        <mat-label>Motivo</mat-label>\n        <input type=\"text\" formControlName=\"motivo\" matInput>\n      </mat-form-field>\n\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <button *ngIf=\"isCreateMode()\"\n            mat-flat-button\n            color=\"primary\"\n            [disabled]=\"!form.valid\">Crear Nota de Salida\n    </button>\n    <button *ngIf=\"isUpdateMode()\"\n            mat-flat-button\n            color=\"primary\"\n            [disabled]=\"!form.valid\">Actualizar Nota de Salida\n    </button>\n  </mat-dialog-actions>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CrearActualizarNotaSalidaComponent } from './crear-actualizar-nota-salida.component';\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n\n\n@NgModule({\n  declarations: [\n    CrearActualizarNotaSalidaComponent\n  ],\n  exports : [CrearActualizarNotaSalidaComponent],\n  imports: [\n    CommonModule,\n    FlexModule,\n    FormsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatOptionModule,\n    MatSelectModule\n  ]\n})\nexport class CrearActualizarNotaSalidaModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotaSalidaComponent } from './nota-salida.component';\n\nconst routes: Routes = [{ path: '', component: NotaSalidaComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NotaSalidaRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {ListColumn} from \"../../../@fury/shared/list/list-column.model\";\nimport {ApiClientService} from \"../../service/api-client.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport moment from \"moment/moment\";\n\nimport {CrearActualizarMascotaComponent} from \"../mascota/crear-actualizar-mascota/crear-actualizar-mascota.component\";\nimport {\n  CrearActualizarNotaSalidaComponent\n} from \"./crear-actualizar-nota-salida/crear-actualizar-nota-salida.component\";\nimport {CrearActualizarNotaSalidaModule} from \"./crear-actualizar-nota-salida/crear-actualizar-nota-salida.module\";\nimport {formatDate} from \"@angular/common\";\nimport {cloneDeep} from \"lodash-es\";\n\n@Component({\n  selector: 'fury-nota-salida',\n  templateUrl: './nota-salida.component.html',\n  styleUrls: ['./nota-salida.component.scss']\n})\nexport class NotaSalidaComponent implements OnInit{\n\n  form: FormGroup;\n  dataSource: MatTableDataSource<any> = new MatTableDataSource([]);\n  columns: ListColumn[] = [\n    {name: 'ID', property: 'id', visible: true, isModelProperty: true},\n    {name: 'Fecha', property: 'fecha', visible: true, isModelProperty: true},\n    {name: 'Producto', property: 'nombreProducto', visible: true, isModelProperty: true},\n    {name: 'Cantidad', property: 'cantidad', visible: true, isModelProperty: true},\n    {name: 'Motivo', property: 'motivo', visible: true, isModelProperty: true},\n    {name: 'Actions', property: 'actions', visible: true},\n  ] as ListColumn[];\n\n  pageSize = 10;\n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  constructor(private apiClient: ApiClientService,\n              private dialog: MatDialog) {\n    this.form = new FormGroup({\n    });\n  }\n\n  ngOnInit(): void {\n    this.getNotasSalida()\n  }\n\n   getNotasSalida() {\n    this.apiClient.getRequest('/api/notasalida')\n      .subscribe({\n        next: (notas: any[]) => {\n         this.dataSource.data = notas\n          console.log(notas);\n        },\n        error: (error) => {\n          console.error(error)\n        }\n      })\n  }\n\n\n  createNotaSalida() {\n    console.info('Abre dialogo');\n    this.dialog.open(CrearActualizarNotaSalidaComponent, {width: '400px'}).afterClosed().subscribe((data: any) => {\n      if (data) {\n        console.info('Al cerrar', data);\n        if (data.fecha){\n          data.fecha = formatDate(data.fecha,'dd/MM/yyyy','en')\n        }\n        this.apiClient.postRequest('/api/notasalida', data)\n          .subscribe({\n            next: (body: any) => {\n              console.info('OK', body);\n              this.getNotasSalida();\n            },\n            error: (error) => {\n              console.error('error', error)\n            }\n          })\n        console.info('Fin api call');\n      } else {\n        console.info('Cancelado')\n      }\n    });\n    console.info('Fin Metodo');\n  }\n\n  deleteNotaSalida(row) {\n    // console.info('deleteMascota', row)\n    this.apiClient.deleteRequest(row.id, '/api/notasalida')\n      .subscribe({\n        next: (body: any) => {\n          this.getNotasSalida();\n        },\n        error: (error) => {\n          // console.error(error)\n        }\n      })\n  }\n\n  updateNotaSalida(row) {\n    console.info(row)\n    const rowCopy = cloneDeep(row)\n    console.info(\"rowCopy\",rowCopy)\n    this.dialog.open(CrearActualizarNotaSalidaComponent, {data: rowCopy, width: '400px'}).afterClosed().subscribe((data: any) => {\n      if (data) {\n        if (data.fecha){\n          data.fecha = formatDate(data.fecha,'dd/MM/yyyy','en')\n        }\n        this.apiClient.putRequest('/api/notasalida', data.id, data)\n          .subscribe({\n            next: (body: any) => {\n              this.getNotasSalida();\n            },\n            error: (error) => {\n              console.error(error)\n            }\n          })\n      } else {\n        console.info('Cancelado')\n      }\n    });\n  }\n\n  onFilterChange(value) {\n    console.info(event)\n\n    if (!this.dataSource) {\n      return;\n    }\n\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n\n\n}\n","<fury-page-layout mode=\"card\">\n  <fury-page-layout-header>\n    <fury-breadcrumbs [crumbs]=\"['Notas de Salida']\" current=\"Nota de Salida\"></fury-breadcrumbs>\n  </fury-page-layout-header>\n\n  <fury-page-layout-content>\n    <fury-list name=\"Nota de Salida\" [columns]=\"[]\" (filterChange)=\"onFilterChange($event)\">\n      <div class=\"actions\">\n        <button class=\"create\" (click)=\"createNotaSalida()\" type=\"button\" mat-mini-fab color=\"primary\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n\n      <table [dataSource]=\"dataSource\" mat-table matSort>\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"checkbox\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <!-- fullName Column -->\n        <ng-container *ngFor=\"let column of columns\">\n          <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n            <td *matCellDef=\"let row\" mat-cell>\n              {{ row[column.property] }}\n            </td>\n          </ng-container>\n        </ng-container>\n\n\n        <!--          actions Column-->\n        <ng-container matColumnDef=\"actions\">\n          <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n          <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\" (click)=\"$event.stopPropagation()\">\n              <mat-icon>more_horiz</mat-icon>\n            </button>\n\n            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n              <button (click)=\"updateNotaSalida(row)\" mat-menu-item>\n                <span>Modify</span>\n              </button>\n              <button (click)=\"deleteNotaSalida(row)\" mat-menu-item>\n                <span>Delete</span>\n              </button>\n            </mat-menu>\n          </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n        <tr (click)=\"updateNotaSalida(row)\"\n            *matRowDef=\"let row; columns: visibleColumns;\"\n            class=\"clickable route-animations-elements\"\n            mat-row></tr>\n      </table>\n\n      <mat-paginator class=\"paginator\" [pageSize]=\"pageSize\"></mat-paginator>\n\n    </fury-list>\n\n  </fury-page-layout-content>\n</fury-page-layout>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotaSalidaRoutingModule } from './nota-salida-routing.module';\nimport { NotaSalidaComponent } from './nota-salida.component';\nimport {BreadcrumbsModule} from \"../../../@fury/shared/breadcrumbs/breadcrumbs.module\";\nimport {ListModule} from \"../../../@fury/shared/list/list.module\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {PageLayoutModule} from \"../../../@fury/shared/page-layout/page-layout.module\";\nimport {CrearActualizarNotaSalidaModule} from \"./crear-actualizar-nota-salida/crear-actualizar-nota-salida.module\";\n\n\n@NgModule({\n  declarations: [\n    NotaSalidaComponent\n  ],\n    imports: [\n        CommonModule,\n        NotaSalidaRoutingModule,\n        BreadcrumbsModule,\n        ListModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatIconModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatTableModule,\n        PageLayoutModule,\n        CrearActualizarNotaSalidaModule\n    ]\n})\nexport class NotaSalidaModule { }\n"],"names":["UntypedFormControl","UntypedFormGroup","MAT_DIALOG_DATA","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r3","id","ɵɵadvance","ɵɵtextInterpolate1","nombre","ctx_r1","form","valid","ctx_r2","CrearActualizarNotaSalidaComponent","constructor","defaults","dialogRef","apiClient","mode","productosList","ngOnInit","parts","fecha","split","idProducto","cantidad","motivo","getRequest","subscribe","next","producto","console","info","error","save","log","value","createCustomer","updateCustomer","customer","close","isCreateMode","isUpdateMode","ɵɵdirectiveInject","i1","MatDialogRef","i2","ApiClientService","selectors","decls","vars","consts","template","CrearActualizarNotaSalidaComponent_Template","rf","ctx","ɵɵlistener","CrearActualizarNotaSalidaComponent_Template_form_ngSubmit_2_listener","ɵɵtemplate","CrearActualizarNotaSalidaComponent_mat_option_9_Template","ɵɵelement","CrearActualizarNotaSalidaComponent_button_23_Template","CrearActualizarNotaSalidaComponent_button_24_Template","CommonModule","FlexModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatOptionModule","MatSelectModule","CrearActualizarNotaSalidaModule","declarations","imports","exports","RouterModule","NotaSalidaComponent","routes","path","component","NotaSalidaRoutingModule","forChild","FormGroup","MatTableDataSource","formatDate","cloneDeep","NotaSalidaComponent_th_11_Template_mat_checkbox_click_1_listener","$event","stopPropagation","NotaSalidaComponent_td_12_Template_mat_checkbox_click_1_listener","column_r10","name","row_r15","property","ɵɵelementContainerStart","NotaSalidaComponent_ng_container_13_ng_container_1_th_1_Template","NotaSalidaComponent_ng_container_13_ng_container_1_td_2_Template","ɵɵelementContainerEnd","NotaSalidaComponent_ng_container_13_ng_container_1_Template","isModelProperty","NotaSalidaComponent_td_16_Template_button_click_1_listener","NotaSalidaComponent_td_16_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r22","row_r18","$implicit","ctx_r21","ɵɵnextContext","ɵɵresetView","updateNotaSalida","NotaSalidaComponent_td_16_Template_button_click_9_listener","ctx_r23","deleteNotaSalida","_r19","NotaSalidaComponent_tr_18_Template_tr_click_0_listener","_r26","row_r24","ctx_r25","visibleColumns","columns","filter","column","visible","map","dialog","dataSource","pageSize","getNotasSalida","notas","data","createNotaSalida","open","width","afterClosed","postRequest","body","row","deleteRequest","rowCopy","putRequest","onFilterChange","event","trim","toLowerCase","MatDialog","NotaSalidaComponent_Template","NotaSalidaComponent_Template_fury_list_filterChange_4_listener","NotaSalidaComponent_Template_button_click_6_listener","NotaSalidaComponent_th_11_Template","NotaSalidaComponent_td_12_Template","NotaSalidaComponent_ng_container_13_Template","NotaSalidaComponent_th_15_Template","NotaSalidaComponent_td_16_Template","NotaSalidaComponent_tr_17_Template","NotaSalidaComponent_tr_18_Template","ɵɵpureFunction0","_c0","_c1","BreadcrumbsModule","ListModule","MatCheckboxModule","MatIconModule","MatMenuModule","MatPaginatorModule","MatSortModule","MatTableModule","PageLayoutModule","NotaSalidaModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}